{"version":3,"sources":["images/nerd.png","images/failure.gif","images/right.gif","images/winner.gif","../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/layout.js","aws-exports.js","models/index.js","models/schema.js","components/auth.js","components/score.js","components/video.js","components/questions.js","components/game.js","components/footerAdmin.js","components/layoutAdmin.js","components/admin/admin.js","components/admin/ItemTypes.js","components/admin/card.js","components/admin/admin-editquiz.js","components/admin/admin-runquiz.js","components/admin/admin-faq.js","components/admin/admin-editquestion.js","components/admin/question-library.js","graphql/queries.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","Layout","props","Container","Row","Col","Jumbotron","className","src","Logo","width","alt","children","awsmobile","initSchema","Quiz","Questions","QuestionsDB","Subscribers","Responses","Languages","name","changePath","a","DataStore","save","score","type","version","quizID","localStorage","getItem","data","subscriber","setItem","catch","err","console","log","Auth","configure","syncExpressions","syncExpression","c","quiz","start","saveSubscriber","config","mass","tension","friction","App","list","items","length","i","push","useState","toggle","set","trail","useTrail","opacity","x","height","from","onClick","state","index","rest","div","key","style","transform","interpolate","Video","videoSrcURL","videoTitle","allow","title","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","autoPlay","QuestionApp","question","disabled","timer","rightAnswer","view","topList","answerState","listQuiz","setAnswer","bind","showAnswer","showQuestions","query","currentQuestion","started","this","setState","returnedQuestion","answerOne","answerOneCorrect","answerTwo","answerTwoCorrect","answerThree","answerThreeCorrect","answerFour","answerFourCorrect","questionArray","subscribers","subscriberList","sort","b","Date","now","status","maxScore","questionTime","Math","round","original","copyOf","updated","observe","subscribe","unsubscribe","image","imageSlice","slice","category","Button","variant","block","youtube","imgKey","theme","photoImg","maxWidth","maxHeight","Image","fluid","Right","Failure","content","Winner","React","Component","awsConfig","setSubscribers","setQuiz","seconds","setSeconds","isActive","setIsActive","listSubscribers","result","quizdata","StartGame","useEffect","gameQuiz","subscription","interval","setInterval","clearInterval","signout","quizTitle","gamecode","Footer","Navbar","fixed","href","target","Amplify","awsconfig","AdminPage","deleteModalShow","setDeleteModalShow","toBeDeletedId","setToBeDeletedId","user","setUser","handleDeleteModalClose","owner","floor","random","timestamp","questionOrder","delete","deletedQuestions","item","Storage","remove","currentAuthenticatedUser","signInUserSession","idToken","payload","sub","userID","Hub","listen","event","Table","substring","to","pathname","onCreate","Modal","show","onHide","Header","closeButton","Title","Body","onDelete","ItemTypes","border","padding","marginBottom","backgroundColor","cursor","Card","moveCard","deleteQuestion","editQuestion","ref","useRef","useDrop","accept","hover","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","drag","questionId","AdminEditQuizPage","location","history","useHistory","adminGameCode","questions","setQuestions","setQuestionOrder","selectedID","setSelectedID","order","JSON","parse","indexOf","splice","todelete","relatedQuestion","todeleteDB","curQuestion","stringify","listQuestions","NoQuestions","toBeChangedArray","arrayMove","mutate","ShowQuestions","msg","DndProvider","backend","HTML5Backend","initSec","initActive","initTimer","parseInt","time","setTimer","setCurrentQuestion","error","setError","stopModal","setStopModal","setToplist","setRightAnswer","responses","setReponses","resetModal","setResetModal","questionIndex","setQuestionIndex","totalQuestions","setTotalQuestions","currentIndex","object","getQuestion","originalQuiz","questionOrderArray","currentQuestionIndex","findIndex","k","arrayLength","next","handleInputChange","value","validate","test","onStop","stopQuiz","changeScreen","chosenView","listResponses","getScores","Breadcrumb","Item","active","imageFromS3","Form","Group","controlId","Alert","size","Label","Control","onChange","startQuiz","processNextQuestion","Text","resetQuiz","FAQ","Accordion","defaultActiveKey","Toggle","as","eventKey","Collapse","rel","register","Predictions","addPluggable","AmazonAIPredictionsProvider","AdminEditQuestionPage","setImage","file","setFile","public","setQuestion","modalState","setModalState","resultQuestion","errors","questionImage","publicValue","language","getLanguage","questionSaved","uploadImage","savedQuestionId","String","path","fileInput","res","rej","Resizer","imageFileResizer","uri","put","contentType","text","interpret","source","textInterpretation","questionDB","fromLibrary","uploadedFile","files","handleChange","handleClick","listCategories","options","label","handleList","defaultValue","categoryText","listQuestion","placeholder","Check","checked","deleteImage","handleEdit","handleCreate","Library","modalData","modalStateAdded","lang","columns","dataField","hidden","formatter","rowContent","row","preview","addToQuiz","handleLanguage","onClose","newQuestion","API","graphql","graphqlOperation","sortDirection","getLangByCode","langArray","getLanguages","langFilter","catFilter","questionsArray","languageText","listLanguages","keyField","pagination","paginationFactory","paginationSize","ReactGA","initialize","pageview","window","search","IndexPage","handleSubmit","filter","beginsWith","variables","listQuizs","startApp","currentCredentials","d","auth","url","Helmet","charSet","firstName","lastName","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5c8a41bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nerd.83f1719b.png\";","module.exports = __webpack_public_path__ + \"static/media/failure.d6aaa211.gif\";","module.exports = __webpack_public_path__ + \"static/media/right.1f40299b.gif\";","module.exports = __webpack_public_path__ + \"static/media/winner.8d4c2cae.gif\";","var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t533,\n\t\t4\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t534,\n\t\t18\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t535,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t536,\n\t\t6\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t537,\n\t\t25\n\t],\n\t\"./amplify-confirm-sign-in_8.entry.js\": [\n\t\t538,\n\t\t7\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t539,\n\t\t26\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t540,\n\t\t8\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t541,\n\t\t19\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t542,\n\t\t27\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t543,\n\t\t9\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t544,\n\t\t28\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t545,\n\t\t22\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t546,\n\t\t29\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t547,\n\t\t10\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t548,\n\t\t20\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t549,\n\t\t21\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t550,\n\t\t11\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t551,\n\t\t12\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t552,\n\t\t13\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t553,\n\t\t17\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t554,\n\t\t14\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t555,\n\t\t15\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t556,\n\t\t16\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t557,\n\t\t23\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t558,\n\t\t30\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 464;\nmodule.exports = webpackAsyncContext;","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./layout.css\";\nimport { Container, Jumbotron, Row, Col } from \"react-bootstrap\";\nimport Logo from \"../images/nerd.png\";\n\nconst Layout = props => {\n  return (\n    <>\n      <div>\n        <Container id=\"contentContainer\">\n          <Row>\n            <Col>\n              {\" \"}\n              <Jumbotron>\n                <span className=\"quizTitle\">\n                  <img src={Logo} width=\"80px\" alt=\"Kwizz\" />\n                </span>\n\n                <span className=\"quizTitle\">Kwizz</span>\n\n                <p className=\"quizDescription\">\n                  Become thé Kwizz Guru amongst colleagues, friends and family.\n                </p>\n              </Jumbotron>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {\" \"}\n              <main>{props.children}</main>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-west-2\",\n    \"aws_appsync_graphqlEndpoint\": \"https://vocwmjzxczae7flppftslqmfvu.appsync-api.us-west-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-west-2\",\n    \"aws_appsync_authenticationType\": \"AWS_IAM\",\n    \"aws_cognito_identity_pool_id\": \"us-west-2:bd88d85b-0b5f-4819-a092-4c8ec3e16eb0\",\n    \"aws_cognito_region\": \"us-west-2\",\n    \"aws_user_pools_id\": \"us-west-2_MRrndZYkQ\",\n    \"aws_user_pools_web_client_id\": \"7h9846221934vinp7sqak3g2tg\",\n    \"oauth\": {},\n    \"aws_user_files_s3_bucket\": \"questionimages135310-planeturi\",\n    \"aws_user_files_s3_bucket_region\": \"us-west-2\",\n    \"predictions\": {\n        \"interpret\": {\n            \"interpretText\": {\n                \"region\": \"us-west-2\",\n                \"proxy\": false,\n                \"defaults\": {\n                    \"type\": \"LANGUAGE\"\n                }\n            }\n        }\n    }\n};\n\n\nexport default awsmobile;\n","// @ts-check\nimport { initSchema } from '@aws-amplify/datastore';\nimport { schema } from './schema';\n\n\n\nconst { Quiz, Questions, QuestionsDB, Subscribers, Responses, Languages } = initSchema(schema);\n\nexport {\n  Quiz,\n  Questions,\n  QuestionsDB,\n  Subscribers,\n  Responses,\n  Languages\n};","export const schema = {\n    \"models\": {\n        \"Quiz\": {\n            \"name\": \"Quiz\",\n            \"fields\": {\n                \"id\": {\n                    \"name\": \"id\",\n                    \"isArray\": false,\n                    \"type\": \"ID\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"title\": {\n                    \"name\": \"title\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"seconds\": {\n                    \"name\": \"seconds\",\n                    \"isArray\": false,\n                    \"type\": \"Int\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"currentQuestion\": {\n                    \"name\": \"currentQuestion\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"questionOrder\": {\n                    \"name\": \"questionOrder\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"started\": {\n                    \"name\": \"started\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"questionTime\": {\n                    \"name\": \"questionTime\",\n                    \"isArray\": false,\n                    \"type\": \"Int\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"view\": {\n                    \"name\": \"view\",\n                    \"isArray\": false,\n                    \"type\": \"Int\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"owner\": {\n                    \"name\": \"owner\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                }\n            },\n            \"syncable\": true,\n            \"pluralName\": \"Quizzes\",\n            \"attributes\": [\n                {\n                    \"type\": \"model\",\n                    \"properties\": {}\n                },\n                {\n                    \"type\": \"auth\",\n                    \"properties\": {\n                        \"rules\": [\n                            {\n                                \"allow\": \"public\",\n                                \"provider\": \"iam\",\n                                \"operations\": [\n                                    \"create\",\n                                    \"update\",\n                                    \"delete\",\n                                    \"read\"\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        },\n        \"Questions\": {\n            \"name\": \"Questions\",\n            \"fields\": {\n                \"id\": {\n                    \"name\": \"id\",\n                    \"isArray\": false,\n                    \"type\": \"ID\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"image\": {\n                    \"name\": \"image\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"imageFromS3\": {\n                    \"name\": \"imageFromS3\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"youtube\": {\n                    \"name\": \"youtube\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"question\": {\n                    \"name\": \"question\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"answerOne\": {\n                    \"name\": \"answerOne\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerOneCorrect\": {\n                    \"name\": \"answerOneCorrect\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerTwo\": {\n                    \"name\": \"answerTwo\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerTwoCorrect\": {\n                    \"name\": \"answerTwoCorrect\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerThree\": {\n                    \"name\": \"answerThree\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerThreeCorrect\": {\n                    \"name\": \"answerThreeCorrect\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerFour\": {\n                    \"name\": \"answerFour\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerFourCorrect\": {\n                    \"name\": \"answerFourCorrect\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"quizID\": {\n                    \"name\": \"quizID\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"order\": {\n                    \"name\": \"order\",\n                    \"isArray\": false,\n                    \"type\": \"Int\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"public\": {\n                    \"name\": \"public\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"fromLibrary\": {\n                    \"name\": \"fromLibrary\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"category\": {\n                    \"name\": \"category\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                }\n            },\n            \"syncable\": true,\n            \"pluralName\": \"Questions\",\n            \"attributes\": [\n                {\n                    \"type\": \"model\",\n                    \"properties\": {}\n                },\n                {\n                    \"type\": \"auth\",\n                    \"properties\": {\n                        \"rules\": [\n                            {\n                                \"allow\": \"public\",\n                                \"provider\": \"iam\",\n                                \"operations\": [\n                                    \"create\",\n                                    \"update\",\n                                    \"delete\",\n                                    \"read\"\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        },\n        \"QuestionsDB\": {\n            \"name\": \"QuestionsDB\",\n            \"fields\": {\n                \"id\": {\n                    \"name\": \"id\",\n                    \"isArray\": false,\n                    \"type\": \"ID\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"image\": {\n                    \"name\": \"image\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"imageFromS3\": {\n                    \"name\": \"imageFromS3\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"youtube\": {\n                    \"name\": \"youtube\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"question\": {\n                    \"name\": \"question\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"answerOne\": {\n                    \"name\": \"answerOne\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerOneCorrect\": {\n                    \"name\": \"answerOneCorrect\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerTwo\": {\n                    \"name\": \"answerTwo\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerTwoCorrect\": {\n                    \"name\": \"answerTwoCorrect\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerThree\": {\n                    \"name\": \"answerThree\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerThreeCorrect\": {\n                    \"name\": \"answerThreeCorrect\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerFour\": {\n                    \"name\": \"answerFour\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"answerFourCorrect\": {\n                    \"name\": \"answerFourCorrect\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"relatedQuestion\": {\n                    \"name\": \"relatedQuestion\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"public\": {\n                    \"name\": \"public\",\n                    \"isArray\": false,\n                    \"type\": \"Boolean\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"category\": {\n                    \"name\": \"category\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                },\n                \"language\": {\n                    \"name\": \"language\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": false,\n                    \"attributes\": []\n                }\n            },\n            \"syncable\": true,\n            \"pluralName\": \"QuestionsDBS\",\n            \"attributes\": [\n                {\n                    \"type\": \"model\",\n                    \"properties\": {}\n                },\n                {\n                    \"type\": \"auth\",\n                    \"properties\": {\n                        \"rules\": [\n                            {\n                                \"allow\": \"public\",\n                                \"provider\": \"iam\",\n                                \"operations\": [\n                                    \"create\",\n                                    \"update\",\n                                    \"delete\",\n                                    \"read\"\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        },\n        \"Subscribers\": {\n            \"name\": \"Subscribers\",\n            \"fields\": {\n                \"id\": {\n                    \"name\": \"id\",\n                    \"isArray\": false,\n                    \"type\": \"ID\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"type\": {\n                    \"name\": \"type\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"score\": {\n                    \"name\": \"score\",\n                    \"isArray\": false,\n                    \"type\": \"Int\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"quizID\": {\n                    \"name\": \"quizID\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"name\": {\n                    \"name\": \"name\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                }\n            },\n            \"syncable\": true,\n            \"pluralName\": \"Subscribers\",\n            \"attributes\": [\n                {\n                    \"type\": \"model\",\n                    \"properties\": {}\n                },\n                {\n                    \"type\": \"auth\",\n                    \"properties\": {\n                        \"rules\": [\n                            {\n                                \"allow\": \"public\",\n                                \"provider\": \"iam\",\n                                \"operations\": [\n                                    \"create\",\n                                    \"update\",\n                                    \"delete\",\n                                    \"read\"\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        },\n        \"Responses\": {\n            \"name\": \"Responses\",\n            \"fields\": {\n                \"id\": {\n                    \"name\": \"id\",\n                    \"isArray\": false,\n                    \"type\": \"ID\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"quiz\": {\n                    \"name\": \"quiz\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"subscriber\": {\n                    \"name\": \"subscriber\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"question\": {\n                    \"name\": \"question\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                }\n            },\n            \"syncable\": true,\n            \"pluralName\": \"Responses\",\n            \"attributes\": [\n                {\n                    \"type\": \"model\",\n                    \"properties\": {}\n                },\n                {\n                    \"type\": \"auth\",\n                    \"properties\": {\n                        \"rules\": [\n                            {\n                                \"allow\": \"public\",\n                                \"provider\": \"iam\",\n                                \"operations\": [\n                                    \"create\",\n                                    \"update\",\n                                    \"delete\",\n                                    \"read\"\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        },\n        \"Languages\": {\n            \"name\": \"Languages\",\n            \"fields\": {\n                \"id\": {\n                    \"name\": \"id\",\n                    \"isArray\": false,\n                    \"type\": \"ID\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"type\": {\n                    \"name\": \"type\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                },\n                \"code\": {\n                    \"name\": \"code\",\n                    \"isArray\": false,\n                    \"type\": \"String\",\n                    \"isRequired\": true,\n                    \"attributes\": []\n                }\n            },\n            \"syncable\": true,\n            \"pluralName\": \"Languages\",\n            \"attributes\": [\n                {\n                    \"type\": \"model\",\n                    \"properties\": {}\n                },\n                {\n                    \"type\": \"key\",\n                    \"properties\": {\n                        \"name\": \"ByCode\",\n                        \"fields\": [\n                            \"type\",\n                            \"code\"\n                        ],\n                        \"queryField\": \"getLangByCode\"\n                    }\n                },\n                {\n                    \"type\": \"auth\",\n                    \"properties\": {\n                        \"rules\": [\n                            {\n                                \"allow\": \"public\",\n                                \"provider\": \"iam\",\n                                \"operations\": [\n                                    \"create\",\n                                    \"update\",\n                                    \"delete\",\n                                    \"read\"\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    },\n    \"enums\": {},\n    \"nonModels\": {},\n    \"version\": \"ed0c279c01a08726da2a28cdefd11640\"\n};","import { DataStore, syncExpression } from \"@aws-amplify/datastore\";\nimport {\n  Quiz,\n  Questions,\n  QuestionsDB,\n  Subscribers,\n  Responses,\n  Languages,\n} from \"../models/\";\n\n//import { DataStore, syncExpression } from 'aws-amplify';\n\nasync function saveSubscriber(name, changePath) {\n  await DataStore.save(\n    new Subscribers({\n      name: name,\n      score: 0,\n      type: \"set\",\n      version: 0,\n      quizID: localStorage.getItem(\"gamecode\"),\n    })\n  )\n    .then((data) => {\n      const subscriber = data.id;\n      localStorage.setItem(\"subscriber\", subscriber);\n\n      changePath(\"game\");\n    })\n    .catch((err) => console.log(err));\n}\n\nfunction Auth(props) {\n  console.log(\"komt hier\");\n\n  DataStore.configure({\n    syncExpressions: [\n      syncExpression(Quiz, () => {\n        return (c) => c.id(\"beginsWith\", localStorage.getItem(\"gamecode\"));\n      }),\n      syncExpression(Questions, () => {\n        return (c) => c.quizID(\"beginsWith\", localStorage.getItem(\"gamecode\"));\n      }),\n      syncExpression(QuestionsDB, () => {\n        return (c) => c.id(\"eq\", null);\n      }),\n      syncExpression(Subscribers, () => {\n        return (c) => c.quizID(\"beginsWith\", localStorage.getItem(\"gamecode\"));\n      }),\n      syncExpression(Responses, () => {\n        return (c) => c.quiz(\"beginsWith\", localStorage.getItem(\"gamecode\"));\n      }),\n      syncExpression(Languages, () => {\n        return (c) => c.id(\"eq\", null);\n      }),\n    ],\n  });\n\n  DataStore.start();\n\n  const name = props.name;\n  saveSubscriber(name, props.changePath);\n\n  return null;\n}\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { useTrail, animated } from \"react-spring\";\nimport \"./score.css\";\n\nconst config = { mass: 5, tension: 1000, friction: 200 };\n\nfunction App({ list }) {\n  let items = [];\n\n  if (list.length > 0) {\n    let i = 0;\n\n    list.map(data => {\n      i++;\n      if (i < 6) {\n        const score = `${i}. ${data.name}:  ${data.score}`;\n        items.push(score);\n\n        return `${i}. ${data.name}:  ${data.score}`;\n      } else if (data.id === localStorage.getItem(\"subscriber\")) {\n        items.push(`${i}. YOUR POSITION:  ${data.score}`);\n      }\n    });\n  }\n\n  const [toggle, set] = useState(true);\n  const trail = useTrail(items.length, {\n    config,\n    opacity: toggle ? 1 : 0,\n    x: toggle ? 0 : 20,\n    height: toggle ? 80 : 0,\n    from: { opacity: 0, x: 20, height: 0 }\n  });\n\n  return (\n    <div className=\"trails-main\" onClick={() => set(state => !state)}>\n      <div>\n        {trail.map(({ x, height, ...rest }, index) => (\n          <animated.div\n            key={items[index]}\n            className=\"trails-text\"\n            style={{\n              ...rest,\n              transform: x.interpolate(x => `translate3d(0,${x}px,0)`)\n            }}\n          >\n            <animated.div style={{ height }}>{items[index]}</animated.div>\n          </animated.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\"\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\n  <div className=\"video\">\n    <iframe\n      src={videoSrcURL + \"?autoplay=1&autohide=1&showinfo=0&controls=0\"}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      title=\"youtubemovie\"\n      frameBorder=\"0\"\n      webkitallowfullscreen=\"true\"\n      mozallowfullscreen=\"true\"\n      allowFullScreen\n      autoPlay\n    />\n  </div>\n)\nexport default Video\n","import React from \"react\";\nimport { DataStore } from \"@aws-amplify/datastore\";\nimport { Questions, Quiz, Subscribers, Responses } from \"../models/\";\nimport { Button, Image } from \"react-bootstrap\";\nimport Score from \"../components/score\";\nimport Video from \"../components/video\";\nimport Failure from \"../images/failure.gif\";\nimport Right from \"../images/right.gif\";\nimport Winner from \"../images/winner.gif\";\nimport { S3Image } from \"aws-amplify-react\";\nimport awsConfig from \"../aws-exports\";\n\nexport default class QuestionApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      subscriber: localStorage.getItem(\"subscriber\"),\n      question: {},\n      quiz: {},\n      disabled: false,\n      timer: 0,\n      rightAnswer: \"\",\n      view: 0,\n      topList: [],\n      answerState: false\n    };\n    this.listQuiz();\n\n    this.setAnswer = this.setAnswer.bind(this);\n    this.showAnswer = this.showAnswer.bind(this);\n    this.showQuestions = this.showQuestions.bind(this);\n  }\n\n  async listQuiz() {\n    const quiz = await DataStore.query(Quiz, c =>\n      c.id(\"eq\", localStorage.getItem(\"gamecode\"))\n    );\n    const currentQuestion = quiz[0].currentQuestion;\n\n    if (quiz[0].started) {\n      if (quiz[0].view === 0 && localStorage.getItem(\"disabled\") === \"true\") {\n        this.setState({ disabled: true });\n      } else {\n        localStorage.setItem(\"disabled\", false);\n        this.setState({ disabled: false });\n      }\n\n      const question = await DataStore.query(Questions, c =>\n        c.id(\"eq\", currentQuestion)\n      );\n      const returnedQuestion = question[0];\n\n      // set right answer in the state\n      let rightAnswer = \"\";\n      if (\n        returnedQuestion.answerOne !== \"\" &&\n        returnedQuestion.answerOneCorrect\n      ) {\n        rightAnswer = returnedQuestion.answerOne;\n      }\n      if (\n        returnedQuestion.answerTwo !== \"\" &&\n        returnedQuestion.answerTwoCorrect\n      ) {\n        rightAnswer = returnedQuestion.answerTwo;\n      }\n      if (\n        returnedQuestion.answerThree !== \"\" &&\n        returnedQuestion.answerThreeCorrect\n      ) {\n        rightAnswer = returnedQuestion.answerThree;\n      }\n      if (\n        returnedQuestion.answerFour !== \"\" &&\n        returnedQuestion.answerFourCorrect\n      ) {\n        rightAnswer = returnedQuestion.answerFour;\n      }\n\n      const questionArray = [];\n      questionArray.push(returnedQuestion);\n\n      if (quiz[0].view === 2 || quiz[0].view === 3) {\n        const subscribers = await DataStore.query(Subscribers, c =>\n          c.quizID(\"eq\", localStorage.getItem(\"gamecode\"))\n        );\n\n        const subscriberList = subscribers.sort(function(a, b) {\n          return b.score - a.score;\n        });\n\n        this.setState({ topList: subscriberList, answerState: false });\n      }\n\n      this.setState({\n        quiz: quiz[0],\n        view: quiz[0].view,\n        question: questionArray[0],\n        timer: Date.now(),\n        rightAnswer,\n        disabled: false\n      });\n    }\n  }\n\n  async setAnswer(status) {\n    localStorage.setItem(\"disabled\", true);\n    this.setState({ disabled: true });\n    let score = 0;\n    if (status) {\n      const maxScore = this.state.quiz.questionTime;\n      score = maxScore - Math.round((Date.now() - this.state.timer) / 1000);\n      this.setState({ answerState: true });\n    } else {\n      this.setState({ answerState: false });\n    }\n\n    const original = await DataStore.query(\n      Subscribers,\n      localStorage.getItem(\"subscriber\")\n    );\n\n    score = score + original.score;\n    await DataStore.save(\n      Subscribers.copyOf(original, updated => {\n        updated.score = score;\n      })\n    );\n\n    await DataStore.save(\n      new Responses({\n        quiz: localStorage.getItem(\"gamecode\"),\n        question: this.state.question.id,\n        subscriber: this.state.subscriber\n      })\n    );\n  }\n\n  componentDidMount() {\n    this.quiz = DataStore.observe(\n      Quiz,\n      localStorage.getItem(\"gamecode\")\n    ).subscribe(async () => {\n      await this.listQuiz();\n    });\n  }\n\n  componentWillUnmount() {\n    this.quiz.unsubscribe();\n  }\n\n  showQuestions() {\n    const question = this.state.question;\n\n    let disabled = this.state.disabled;\n    if (localStorage.getItem(\"disabled\") === \"true\") {\n      disabled = true;\n    }\n\n    const image = question.image;\n    let imageSlice = \"\";\n    if (image !== null && typeof image !== \"undefined\") {\n      imageSlice = image.slice(0, 4);\n    }\n\n    return (\n      <div>\n        <span className=\"question\">{question.question}</span>\n        {question.category !== null && (\n          <div className=\"category\">Category: {question.category}</div>\n        )}\n\n        <div className=\"answer\">\n          <Button\n            variant=\"primary\"\n            block\n            onClick={() => this.setAnswer(question.answerOneCorrect)}\n            disabled={disabled}\n          >\n            {question.answerOne}\n          </Button>\n        </div>\n        <div className=\"answer\">\n          <Button\n            variant=\"success\"\n            block\n            onClick={() => this.setAnswer(question.answerTwoCorrect)}\n            disabled={disabled}\n          >\n            {question.answerTwo}\n          </Button>\n        </div>\n        <div className=\"answer\">\n          <Button\n            variant=\"warning\"\n            block\n            onClick={() => this.setAnswer(question.answerThreeCorrect)}\n            disabled={disabled}\n          >\n            {question.answerThree}\n          </Button>\n        </div>\n        <div className=\"answer\">\n          <Button\n            variant=\"danger\"\n            block\n            onClick={() => this.setAnswer(question.answerFourCorrect)}\n            disabled={disabled}\n          >\n            {question.answerFour}\n          </Button>\n        </div>\n\n        {question.youtube !== null && (\n          <div className=\"videoQuestion\">\n            <Video videoSrcURL={question.youtube} videoTitle=\"\" />\n          </div>\n        )}\n        {(question.image !== null || question.image !== \"\") && (\n          <div className=\"imageQuestionDiv\">\n            {imageSlice !== \"http\" ? (\n              <S3Image\n                imgKey={image}\n                theme={{\n                  photoImg: { maxWidth: \"400px\", maxHeight: \"400px\" }\n                }}\n              />\n            ) : (\n              <Image src={question.image} className=\"imageQuestion\" fluid />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  showAnswer() {\n    const question = this.state.question;\n    return (\n      <div>\n        <span className=\"question\">{question.question}</span>\n\n        {this.state.answerState && (\n          <div className=\"gif\">\n            <div className=\"result\">\n              Yeah! The right answer is: {this.state.rightAnswer}\n            </div>\n            <img src={Right} width=\"300px\" alt=\"right answer\" />\n          </div>\n        )}\n        {!this.state.answerState && (\n          <div className=\"gif\">\n            <div className=\"resultfalse\">\n              Failed! The right answer is: {this.state.rightAnswer}\n            </div>\n            <img src={Failure} width=\"300px\" alt=\"wrong answer\" />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    let content = \"There are no questions\";\n    const quiz = this.state.quiz;\n\n    if (quiz.view === 0) {\n      content = this.showQuestions();\n    }\n    if (quiz.view === 1) {\n      content = this.showAnswer();\n    }\n    if (quiz.view === 2) {\n      content = (\n        <div>\n          <p className=\"top\">TOP 5</p>\n          <Score list={this.state.topList} />\n        </div>\n      );\n    }\n    if (quiz.view === 3) {\n      content = (\n        <div className=\"gif\">\n          <img src={Winner} width=\"300px\" alt=\"winner\" />\n          <p className=\"top\">END RESULT</p>\n          <Score list={this.state.topList} />\n        </div>\n      );\n    }\n\n    return <div>{content}</div>;\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"./layout\";\nimport { DataStore } from \"@aws-amplify/datastore\";\nimport { Quiz, Subscribers } from \"../models/\";\nimport Questions from \"./questions\";\nimport { Button } from \"react-bootstrap\";\nimport awsConfig from \"../aws-exports\";\nDataStore.configure(awsConfig);\n\nfunction App(props) {\n  const [subscribers, setSubscribers] = useState([]);\n  const [quiz, setQuiz] = useState([]);\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(true);\n\n  async function listSubscribers() {\n    const result = await DataStore.query(Subscribers, c =>\n      c.quizID(\"eq\", localStorage.getItem(\"gamecode\"))\n    );\n\n    setSubscribers(result);\n  }\n\n  async function listQuiz() {\n    const quiz = await DataStore.query(Quiz, c =>\n      c.id(\"eq\", localStorage.getItem(\"gamecode\"))\n    );\n\n    const quizdata = quiz[0];\n    console.log(quizdata);\n    if (\n      typeof quizdata === \"undefined\" ||\n      typeof quizdata.view === \"undefined\"\n    ) {\n    } else {\n      if (quizdata.view === 0) {\n        setSeconds(quizdata.questionTime);\n        setIsActive(true);\n      } else {\n        setSeconds(0);\n        setIsActive(false);\n      }\n      setQuiz(quizdata);\n    }\n  }\n\n  const StartGame = () => {\n    return (\n      <div className=\"startgame\">\n        We will soon start with the most exciting game ever!\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    listQuiz();\n    listSubscribers();\n\n    const gameQuiz = DataStore.observe(\n      Quiz,\n      localStorage.getItem(\"gamecode\")\n    ).subscribe(() => {\n      console.log(\"quizUpdated\");\n      listQuiz();\n    });\n    const subscription = DataStore.observe(Subscribers).subscribe(() => {\n      listSubscribers();\n    });\n\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds - 1);\n      }, 1000);\n    } else if (!isActive) {\n      clearInterval(interval);\n    }\n\n    return () => {\n      subscription.unsubscribe();\n      gameQuiz.unsubscribe();\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div>\n      <Button onClick={props.signout}>Signout</Button>\n      <Layout quizTitle={quiz}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {quiz.started && quiz.view === 0 && (\n              <div className=\"quizTimer\">\n                <span className=\"total\">{seconds > 0 ? seconds : 0}</span>\n                <span> seconds</span>\n              </div>\n            )}\n            <div className=\"subscribers\">\n              <span className=\"total\">{subscribers.length}</span>\n              <span> Participants</span>\n            </div>\n          </header>\n          {quiz.started && (\n            <Questions\n              gamecode={localStorage.getItem(\"gamecode\")}\n              subscriber={localStorage.getItem(\"subscriber\")}\n            />\n          )}\n          {!quiz.started && <StartGame />}\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nfunction Footer() {\n  return (\n    <Navbar fixed=\"bottom\" className=\"footer\">\n      <div className=\"container\">\n        <div className=\"footer-widget\">\n          <div className=\"footer-widget-heading\">\n            <h3>\n              <a href=\"/\">Kwizz.guru</a>\n            </h3>\n          </div>\n          <ul>\n            <li>\n              <a href=\"/admin-faq\">FAQ</a>\n            </li>\n            <li>\n              <a\n                href=\"https://github.com/alowa-apps/kwizz/issues/new/choose\"\n                target=\"_blank\"\n              >\n                Having issues or idea?\n              </a>\n            </li>\n            <li>\n              <a href=\"http://www.alowa.app\" target=\"_blank\">\n                Contact us\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </Navbar>\n  );\n}\n\nexport default Footer;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./layout.css\";\nimport { Container, Jumbotron, Row, Col } from \"react-bootstrap\";\nimport Logo from \"../images/nerd.png\";\nimport Footer from \"./footerAdmin\";\n\nconst Layout = props => {\n  return (\n    <>\n      <div>\n        <Container id=\"contentContainer\">\n          <Row>\n            <Col>\n              {\" \"}\n              <Jumbotron>\n                <span className=\"quizTitle\">\n                  <img src={Logo} width=\"80px\" alt=\"Kwizz\" />\n                </span>\n\n                <span className=\"quizTitle\">Kwizz</span>\n\n                <p className=\"quizDescription\">\n                  Become thé Kwizz Guru amongst colleagues, friends and family.\n                </p>\n              </Jumbotron>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {\" \"}\n              <main>{props.children}</main>\n            </Col>\n          </Row>\n        </Container>\n        {/* <Footer /> */}\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Modal, Button } from \"react-bootstrap\";\nimport Layout from \"../layoutAdmin\";\nimport { DataStore } from \"@aws-amplify/datastore\";\nimport { Quiz, Subscribers, Questions, Responses } from \"../../models/\";\nimport { Link } from \"react-router-dom\";\nimport Amplify, { Hub } from \"@aws-amplify/core\";\nimport Footer from \"../footerAdmin\";\nimport awsconfig from \"../../aws-exports\";\nimport Storage from \"@aws-amplify/storage\";\nimport { Auth } from \"@aws-amplify/auth\";\n\nimport { AmplifyAuthenticator, AmplifySignOut } from \"@aws-amplify/ui-react\";\n\nAmplify.configure(awsconfig);\nDataStore.configure(awsconfig);\nAuth.configure(awsconfig);\n\nfunction AdminPage(props) {\n  const [quiz, setQuiz] = useState([]);\n  const [deleteModalShow, setDeleteModalShow] = useState(false);\n  const [toBeDeletedId, setToBeDeletedId] = useState(false);\n  const [user, setUser] = useState();\n\n  const handleDeleteModalClose = () => setDeleteModalShow(false);\n\n  function handleDeleteModalShow(id) {\n    setToBeDeletedId(id);\n\n    setDeleteModalShow(true);\n  }\n\n  async function onCreate() {\n    await DataStore.save(\n      new Quiz({\n        owner: user,\n        title: `New quiz`,\n        code: Math.floor(Math.random()),\n        seconds: 30,\n        timestamp: 0,\n        started: false,\n        questionOrder: \"[]\",\n      })\n    );\n  }\n\n  async function onDelete() {\n    DataStore.delete(Quiz, (c) => c.id(\"eq\", toBeDeletedId));\n    DataStore.delete(Subscribers, (c) => c.quizID(\"eq\", toBeDeletedId));\n    DataStore.delete(Responses, (c) => c.quiz(\"eq\", toBeDeletedId));\n\n    const deletedQuestions = await DataStore.query(Questions, (c) =>\n      c.quizID(\"eq\", toBeDeletedId)\n    );\n\n    if (deletedQuestions.length > 0) {\n      deletedQuestions.map((item) => {\n        if (item.image !== \"\" || typeof item.image !== \"undefined\") {\n          Storage.remove(item.image); // remove from 3s bucket\n        }\n      });\n    }\n\n    DataStore.delete(Questions, (c) => c.quizID(\"eq\", toBeDeletedId));\n\n    listQuiz(setQuiz);\n    handleDeleteModalClose();\n    setToBeDeletedId(\"\");\n  }\n\n  async function listQuiz(setQuiz) {\n    Auth.currentAuthenticatedUser()\n      .then(async (data) => {\n        setUser(data.signInUserSession.idToken.payload.sub);\n        const userID = data.signInUserSession.idToken.payload.sub;\n\n        const result = await DataStore.query(Quiz, (c) =>\n          c.owner(\"eq\", userID)\n        );\n        setQuiz(result);\n      })\n      .catch((e) => console.log(\"error: \", e));\n  }\n\n  useEffect(() => {\n    Hub.listen(\"auth\", (data) => {\n      const { payload } = data;\n      if (payload.event === \"signIn\") {\n        listQuiz(setQuiz);\n      }\n    });\n\n    listQuiz(setQuiz);\n\n    return () => {};\n  }, []);\n\n  return (\n    <div className=\"signin\">\n      <AmplifyAuthenticator>\n        <div className=\"signout\">\n          {\" \"}\n          <AmplifySignOut />\n        </div>\n\n        <Layout>\n          <div className=\"App\">\n            <Table>\n              <thead>\n                <tr>\n                  <td>Game code</td>\n\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              </thead>\n              <tbody>\n                {quiz.map((item, i) => {\n                  return (\n                    <tr key={i}>\n                      <td>{quiz[i].id.substring(0, 8)}</td>\n\n                      <td>\n                        <Link\n                          to={{\n                            pathname: \"/run-quiz\",\n                            state: { quizID: quiz[i].id },\n                          }}\n                        >\n                          Run Kwizz\n                        </Link>\n                      </td>\n                      <td>\n                        <Link\n                          to={{\n                            pathname: \"/edit-quiz\",\n                            state: { quizID: quiz[i].id },\n                          }}\n                        >\n                          Edit Kwizz\n                        </Link>\n                      </td>\n                      <td>\n                        <Button\n                          variant=\"danger\"\n                          onClick={() => handleDeleteModalShow(quiz[i].id)}\n                        >\n                          Delete Kwizz\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n\n            <Button\n              onClick={() => {\n                onCreate();\n                listQuiz(setQuiz);\n              }}\n              variant=\"primary\"\n            >\n              Add Kwizz\n            </Button>\n\n            <Modal show={deleteModalShow} onHide={handleDeleteModalClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Delete kwizz</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                Are you sure you want to delete this kwizz? All your data will\n                be destroyed, except from the questions in the library!\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"danger\" onClick={() => onDelete()}>\n                  Delete kwizz\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        </Layout>\n      </AmplifyAuthenticator>\n      <div className=\"clear\"></div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default AdminPage;\n","export const ItemTypes = {\n  CARD: \"card\"\n};\n","import React, { useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { ItemTypes } from \"./ItemTypes\";\nimport { Link, useHistory } from \"react-router-dom\";\nconst style = {\n  border: \"1px dashed gray\",\n  padding: \"0.5rem 1rem\",\n  marginBottom: \".5rem\",\n  backgroundColor: \"white\",\n  cursor: \"move\"\n};\nexport const Card = ({\n  id,\n  index,\n  moveCard,\n  title,\n  editQuestion,\n  deleteQuestion\n}) => {\n  const ref = useRef(null);\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex);\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    }\n  });\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n  return (\n    <div ref={ref} style={{ ...style, opacity }}>\n      <h5>{title}</h5>\n      <Link\n        to={{\n          pathname: \"/edit-question\",\n          state: { questionId: id, status: \"edit\" }\n        }}\n        className=\"editQuestion\"\n      >\n        Edit\n      </Link>\n      <Link onClick={() => deleteQuestion(id)}>Delete</Link>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport Layout from \"../layoutAdmin\";\nimport { DataStore } from \"@aws-amplify/datastore\";\nimport { Questions, Quiz, QuestionsDB } from \"../../models/\";\nimport { Row, Col, Button, Modal } from \"react-bootstrap\";\nimport Storage from \"@aws-amplify/storage\";\nimport arrayMove from \"array-move\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { AmplifyAuthenticator, AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Card } from \"./card\";\n\nfunction AdminEditQuizPage({ location }) {\n  let history = useHistory();\n\n  if (typeof history.location.state !== \"undefined\") {\n    const quizID = history.location.state.quizID;\n    localStorage.setItem(\"adminGameCode-editquiz\", quizID);\n  }\n\n  const adminGameCode = localStorage.getItem(\"adminGameCode-editquiz\");\n  const [questions, setQuestions] = useState([]);\n  const [questionOrder, setQuestionOrder] = useState([]);\n  const [deleteModalShow, setDeleteModalShow] = useState(false);\n  const [selectedID, setSelectedID] = useState();\n\n  const handleDeleteModalClose = () => setDeleteModalShow(false);\n\n  const handleDeleteModalShow = id => {\n    setDeleteModalShow(true);\n    setSelectedID(id);\n  };\n\n  function addQuestion(id) {\n    history.push({\n      pathname: \"/edit-question\",\n      state: {\n        questionId: 0,\n        status: \"add\"\n      }\n    });\n  }\n\n  async function onDelete() {\n    const quiz = await DataStore.query(\n      Quiz,\n      localStorage.getItem(\"adminGameCode-editquiz\")\n    );\n\n    let order = [];\n    order = JSON.parse(quiz.questionOrder);\n\n    var index = order.indexOf(selectedID);\n\n    if (index !== -1) {\n      order.splice(index, 1);\n    }\n\n    const todelete = await DataStore.query(Questions, selectedID);\n\n    if (todelete.image !== \"\" || typeof todelete.image !== \"undefined\") {\n      Storage.remove(todelete.image); // remove from 3s bucket\n    }\n    DataStore.delete(todelete);\n\n    const todeleteDB = await DataStore.query(QuestionsDB, c =>\n      c.relatedQuestion(\"eq\", selectedID)\n    );\n\n    if (todeleteDB.length > 0) {\n      DataStore.delete(todeleteDB[0]);\n    }\n\n    let curQuestion = null;\n    if (order.length > 0) {\n      curQuestion = order[0];\n    }\n\n    await DataStore.save(\n      Questions.copyOf(quiz, updated => {\n        updated.questionOrder = JSON.stringify(order);\n        updated.currentQuestion = curQuestion;\n      })\n    );\n\n    // If there are not questions more, set the array to the init value\n    if (order.length === 0) {\n      setQuestions([]);\n    }\n\n    //reset ID and close modal\n    setSelectedID(\"\");\n    handleDeleteModalClose();\n  }\n\n  async function listQuestions(setQuestions) {\n    const quiz = await DataStore.query(\n      Quiz,\n      localStorage.getItem(\"adminGameCode-editquiz\")\n    );\n\n    console.log(quiz);\n    const questionOrder = JSON.parse(quiz.questionOrder);\n    setQuestionOrder(questionOrder);\n    let questions = [];\n    if (questionOrder !== null || questionOrder !== \"[]\") {\n      for (let i = 0; i < questionOrder.length; i++) {\n        const question = await DataStore.query(Questions, questionOrder[i]);\n        if (typeof question !== \"undefined\") {\n          questions.push(question);\n        }\n      }\n    }\n    setQuestions(questions);\n  }\n\n  useEffect(() => {\n    const question = DataStore.observe(Questions).subscribe(msg => {\n      listQuestions(setQuestions);\n    });\n\n    listQuestions(setQuestions);\n\n    return () => {\n      question.unsubscribe();\n    };\n  }, []);\n\n  function NoQuestions() {\n    return <div> There are no question </div>;\n  }\n\n  async function moveCard(dragIndex, hoverIndex) {\n    var toBeChangedArray = [];\n    toBeChangedArray = questionOrder;\n\n    arrayMove.mutate(toBeChangedArray, dragIndex, hoverIndex);\n\n    const original = await DataStore.query(Quiz, adminGameCode);\n    await DataStore.save(\n      Quiz.copyOf(original, updated => {\n        updated.questionOrder = JSON.stringify(toBeChangedArray);\n      })\n    );\n    listQuestions(setQuestions);\n  }\n\n  function ShowQuestions() {\n    return questions.map((item, i) => {\n      return (\n        <Row key={i} className=\"editRow\">\n          <Col>\n            <Card\n              key={item.id}\n              index={i}\n              id={item.id}\n              moveCard={moveCard}\n              title={questions[i].question}\n              editQuestion={{\n                pathname: \"/edit-question\",\n                state: { questionId: questions[i].id, status: \"edit\" }\n              }}\n              deleteQuestion={() => handleDeleteModalShow(questions[i].id)}\n            />\n          </Col>\n        </Row>\n      );\n    });\n  }\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <AmplifyAuthenticator>\n        <div className=\"signout\">\n          {\" \"}\n          <AmplifySignOut />\n        </div>\n\n        <Layout>\n          <div className=\"App\">\n            <Link to=\"/admin\">\n              <Button className=\"backButton\" variant=\"secondary\">\n                Back\n              </Button>\n            </Link>\n            <br />\n            <p>{questions.length} Questions</p>\n            <div className=\"addEditButtons\">\n              <Button\n                onClick={() => {\n                  addQuestion();\n                }}\n                variant=\"primary\"\n                className=\"addQuestion\"\n              >\n                Add Question\n              </Button>\n              or\n              <Link\n                to={{\n                  pathname: \"/library\"\n                }}\n              >\n                <Button variant=\"primary\" className=\"addQuestionLibrary\">\n                  Find in library\n                </Button>\n              </Link>\n            </div>\n            {typeof questions === \"undefined\" ||\n            questions.length === 0 ||\n            typeof questions[0] === \"undefined\" ? (\n              <NoQuestions />\n            ) : (\n              <ShowQuestions />\n            )}\n            <br />\n          </div>\n          <Modal show={deleteModalShow} onHide={handleDeleteModalClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Delete question</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              Are you sure you want to delete this question?\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"danger\" onClick={() => onDelete()}>\n                Delete quiz\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </Layout>\n      </AmplifyAuthenticator>\n    </DndProvider>\n  );\n}\n\nexport default AdminEditQuizPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Layout from \"../layoutAdmin\";\nimport { DataStore } from \"@aws-amplify/datastore\";\nimport { Quiz, Subscribers, Questions, Responses } from \"../../models/\";\nimport {\n  Breadcrumb,\n  Row,\n  Col,\n  Card,\n  Button,\n  Form,\n  Alert,\n  Modal,\n  Image\n} from \"react-bootstrap\";\nimport { S3Image } from \"aws-amplify-react\";\nimport { AmplifyAuthenticator, AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport Video from \"../video\";\nimport Score from \"../score\";\n\nfunction AdminPage(props) {\n  const {\n    location: {\n      state: { quizID }\n    }\n  } = useHistory();\n  localStorage.setItem(\"admingamecode\", quizID);\n  const adminGameCode = quizID;\n\n  const [subscribers, setSubscribers] = useState([]);\n\n  const [quiz, setQuiz] = useState([]);\n\n  let initSec = 0;\n  let initActive = false;\n  let initTimer = 30;\n\n  if (parseInt(localStorage.getItem(\"seconds\")) > 0) {\n    initSec = parseInt(localStorage.getItem(\"seconds\"));\n    initTimer = parseInt(localStorage.getItem(\"timer\"));\n    initActive = true;\n  }\n  const [seconds, setSeconds] = useState(initSec);\n  const [isActive, setIsActive] = useState(initActive);\n  const [time, setTimer] = useState(initTimer);\n\n  const [currentQuestion, setCurrentQuestion] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [stopModal, setStopModal] = useState(false);\n  const [topList, setToplist] = useState([]);\n  const [rightAnswer, setRightAnswer] = useState(\"\");\n  const [responses, setReponses] = useState(0);\n  const [resetModal, setResetModal] = useState(false);\n  const [questionIndex, setQuestionIndex] = useState(1);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n\n  const handleModalClose = () => setStopModal(false);\n  const handleModalShow = () => {\n    setStopModal(true);\n  };\n  const handleResetModalClose = () => setResetModal(false);\n  const handleResetModalShow = () => {\n    setResetModal(true);\n  };\n\n  async function listSubscribers(setSubscribers) {\n    const subscribers = await DataStore.query(Subscribers, c =>\n      c.quizID(\"eq\", adminGameCode)\n    );\n    setSubscribers(subscribers);\n  }\n\n  async function listQuiz(setQuiz, setCurrentQuestion) {\n    const quiz = await DataStore.query(Quiz, c => c.id(\"eq\", adminGameCode));\n    const quizdata = quiz[0];\n\n    const totalQuestions = JSON.parse(quizdata.questionOrder);\n\n    setTotalQuestions(totalQuestions.length);\n\n    let currentIndex = 0;\n\n    totalQuestions.map((object, index) => {\n      if (object === quizdata.currentQuestion) {\n        currentIndex = index + 1;\n        return;\n      }\n    });\n\n    setQuestionIndex(currentIndex);\n\n    setQuiz(quizdata);\n    if (quizdata.currentQuestion !== null) {\n      getQuestion(setCurrentQuestion, quizdata.currentQuestion);\n    }\n  }\n\n  async function getQuestion(setCurrentQuestion, id) {\n    if (id !== \"\") {\n      const question = await DataStore.query(Questions, c => c.id(\"eq\", id));\n      let rightAnswer = \"\";\n      if (question[0].answerOne !== \"\" && question[0].answerOneCorrect) {\n        rightAnswer = question[0].answerOne;\n      }\n      if (question[0].answerTwo !== \"\" && question[0].answerTwoCorrect) {\n        rightAnswer = question[0].answerTwo;\n      }\n      if (question[0].answerThree !== \"\" && question[0].answerThreeCorrect) {\n        rightAnswer = question[0].answerThree;\n      }\n      if (question[0].answerFour !== \"\" && question[0].answerFourCorrect) {\n        rightAnswer = question[0].answerFour;\n      }\n      setRightAnswer(rightAnswer);\n\n      setCurrentQuestion(question[0]);\n    }\n  }\n\n  async function getScores(setToplist) {\n    const subscribers = await DataStore.query(Subscribers, c =>\n      c.quizID(\"eq\", localStorage.getItem(\"adminGameCode-editquiz\"))\n    );\n\n    const subscriberList = subscribers.sort(function(a, b) {\n      return b.score - a.score;\n    });\n\n    setToplist(subscriberList);\n  }\n\n  async function listResponses(setReponses, currentQuestion) {\n    const responses = await DataStore.query(Responses, c =>\n      c.question(\"eq\", currentQuestion.id)\n    );\n\n    setReponses(responses.length);\n  }\n\n  async function resetQuiz() {\n    //deleteSubscribers\n    await DataStore.delete(Subscribers, c => c.quizID(\"eq\", adminGameCode));\n\n    await DataStore.delete(Responses, c => c.quiz(\"eq\", adminGameCode));\n\n    // remove CurrentQuestion in Quiz\n    const originalQuiz = await DataStore.query(Quiz, adminGameCode);\n\n    await DataStore.save(\n      Quiz.copyOf(originalQuiz, updated => {\n        updated.currentQuestion = null;\n      })\n    );\n\n    setResetModal(false);\n  }\n\n  useEffect(() => {\n    if (adminGameCode !== \"\") {\n      localStorage.setItem(\"adminGameCode-editquiz\", adminGameCode);\n    }\n    const subscription = DataStore.observe(Subscribers).subscribe(() => {\n      listSubscribers(setSubscribers);\n    });\n\n    const quiz = DataStore.observe(\n      Quiz,\n      localStorage.getItem(\"adminGameCode-editquiz\")\n    ).subscribe(() => {\n      console.log(\"change\");\n      listQuiz(setQuiz, setCurrentQuestion);\n    });\n\n    const responses = DataStore.observe(Responses).subscribe(() => {\n      listResponses(setReponses, currentQuestion);\n    });\n\n    listQuiz(setQuiz, setCurrentQuestion);\n    listSubscribers(setSubscribers);\n\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        const timer = parseInt(time);\n\n        if (seconds === 0) {\n          changeScreen(0);\n        }\n\n        if (seconds === timer) {\n          changeScreen(1);\n          getScores(setToplist);\n        }\n\n        if (seconds === timer + 5) {\n          changeScreen(2);\n        }\n\n        setSeconds(seconds + 1);\n        localStorage.setItem(\"seconds\", seconds + 1);\n\n        if (seconds === timer + 10) {\n          setReponses(0);\n          setSeconds(0);\n          localStorage.setItem(\"seconds\", 0);\n          setIsActive(false);\n        }\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n\n    return () => {\n      subscription.unsubscribe();\n      quiz.unsubscribe();\n      responses.unsubscribe();\n      clearInterval(interval);\n    };\n  }, [\n    isActive,\n    seconds,\n    time,\n    topList,\n    rightAnswer,\n    responses,\n    totalQuestions\n  ]);\n\n  //Process next question or end quiz (screen = 3)\n  async function processNextQuestion(currentQuestion, questionOrder) {\n    //transfor string from appsync in array\n    var questionOrderArray = JSON.parse(questionOrder);\n    //find the index number of the current question in the array\n    var currentQuestionIndex = questionOrderArray.findIndex(\n      k => k === currentQuestion\n    );\n\n    //find arraylength, if array length is the same as the next number, end quiz by update screen to 3. -1 to correct that array starts at 0\n    const arrayLength = questionOrderArray.length - 1;\n\n    if (parseInt(currentQuestionIndex) === arrayLength) {\n      const original = await DataStore.query(Quiz, adminGameCode);\n      await DataStore.save(\n        Quiz.copyOf(original, updated => {\n          updated.view = 3;\n        })\n      );\n    } else {\n      //add +1 to current index number to find next question\n      var next = parseInt(currentQuestionIndex) + 1;\n\n      const original = await DataStore.query(Quiz, adminGameCode);\n\n      await DataStore.save(\n        Quiz.copyOf(original, updated => {\n          updated.currentQuestion = questionOrderArray[next];\n          updated.view = 0;\n        })\n      );\n      setIsActive(!isActive);\n    }\n  }\n\n  function handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n\n    setTimer(value);\n    localStorage.setItem(\"timer\", value);\n  }\n\n  function validate() {\n    if (!/^[0-9]*$/.test(time)) {\n      setError(\"Enter only a number\");\n      return false;\n    }\n    setError(\"\");\n    return true;\n  }\n  //Start the quiz + add first question in + update view to 0\n  async function startQuiz(questionOrder) {\n    if (validate()) {\n      setIsActive(!isActive);\n      const questionOrderArray = JSON.parse(questionOrder);\n      if (questionOrderArray.length !== 0) {\n        const original = await DataStore.query(Quiz, adminGameCode);\n        console.log(questionOrderArray);\n        await DataStore.save(\n          Quiz.copyOf(original, updated => {\n            updated.started = true;\n            updated.currentQuestion = questionOrderArray[0];\n            updated.view = 0;\n            updated.questionTime = parseInt(time);\n          })\n        );\n      }\n    }\n  }\n\n  function onStop(state) {\n    if (state) {\n      stopQuiz();\n    }\n\n    handleModalClose();\n  }\n  async function stopQuiz() {\n    setSeconds(0);\n    localStorage.setItem(\"seconds\", 0);\n    setIsActive(false);\n\n    const original = await DataStore.query(Quiz, adminGameCode);\n\n    await DataStore.save(\n      Quiz.copyOf(original, updated => {\n        updated.started = false;\n      })\n    );\n  }\n\n  async function changeScreen(chosenView) {\n    const original = await DataStore.query(Quiz, adminGameCode);\n\n    await DataStore.save(\n      Quiz.copyOf(original, updated => {\n        updated.view = chosenView;\n      })\n    );\n  }\n\n  function showImage(question) {\n    console.log(question);\n    if (question.imageFromS3 && currentQuestion.image !== \"\") {\n      return (\n        <S3Image\n          imgKey={question.image}\n          theme={{\n            photoImg: { maxWidth: \"250px\", maxHeight: \"250px\" }\n          }}\n        />\n      );\n    } else {\n      return <Image src={question.image} className=\"imageQuestion\" fluid />;\n    }\n  }\n\n  function showQuizControl() {\n    if (totalQuestions === 0) {\n      return (\n        <Card.Body>\n          <Card.Title>There are no questions yet!</Card.Title>\n        </Card.Body>\n      );\n    }\n\n    return (\n      <Card.Body>\n        <Card.Title>Kwizz control</Card.Title>\n\n        {!quiz.started && (\n          <Form.Group controlId=\"timer\">\n            {error.length > 0 && (\n              <Alert size=\"sm\" variant=\"danger\">\n                {error}\n              </Alert>\n            )}\n\n            <Form.Label>Set seconds per question</Form.Label>\n            <Form.Control\n              size=\"sm\"\n              type=\"text\"\n              name=\"name\"\n              value={time}\n              width=\"20px\"\n              onChange={handleInputChange}\n            />\n          </Form.Group>\n        )}\n        <div className=\"controlButtons\">\n          {!quiz.started ? (\n            <Button\n              onClick={() => {\n                startQuiz(quiz.questionOrder);\n              }}\n              variant=\"outline-success\"\n              className=\"controlStart\"\n            >\n              Start kwizz\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                handleModalShow();\n              }}\n              variant=\"outline-danger\"\n              className=\"controlStart\"\n            >\n              Stop quiz\n            </Button>\n          )}\n          {!quiz.started && (\n            <Button\n              onClick={() => {\n                handleResetModalShow();\n              }}\n              className=\"controlReset\"\n              variant=\"outline-danger\"\n            >\n              Reset\n            </Button>\n          )}\n          {seconds === 0 && quiz.started && quiz.view !== 3 && (\n            <Button\n              onClick={() => {\n                processNextQuestion(quiz.currentQuestion, quiz.questionOrder);\n              }}\n              className=\"controlNext\"\n              variant=\"success\"\n            >\n              Next question\n            </Button>\n          )}\n        </div>\n      </Card.Body>\n    );\n  }\n\n  return (\n    <AmplifyAuthenticator>\n      <div className=\"signout\">\n        {\" \"}\n        <AmplifySignOut />\n      </div>\n      <Layout>\n        <div className=\"App\">\n          <Breadcrumb>\n            <Breadcrumb.Item href=\"/admin\">Admin Home</Breadcrumb.Item>\n            <Breadcrumb.Item active>Run Kwizz</Breadcrumb.Item>\n          </Breadcrumb>\n\n          <Card className=\"gamersView\">\n            <Card.Body>\n              <Card.Title>What your gamers see now:</Card.Title>\n\n              {!quiz.started ? (\n                <div className=\"startgame\">\n                  We will soon start with the most exciting game ever!\n                </div>\n              ) : (\n                <div>\n                  {quiz.view === 0 && (\n                    <div>\n                      {currentQuestion.category !== null && (\n                        <div className=\"category\">\n                          Category: {currentQuestion.category}\n                        </div>\n                      )}\n                      <Row>\n                        <Col>\n                          <div>\n                            <span className=\"question\">\n                              {currentQuestion.question}\n                            </span>\n\n                            <li>{currentQuestion.answerOne}</li>\n                            <li>{currentQuestion.answerTwo}</li>\n                            <li>{currentQuestion.answerThree}</li>\n                            <li>{currentQuestion.answerFour}</li>\n                          </div>\n                        </Col>\n                        <Col>\n                          {currentQuestion.youtube !== null && (\n                            <div className=\"videoQuestion\">\n                              <Video\n                                videoSrcURL={currentQuestion.youtube}\n                                videoTitle=\"\"\n                              />\n                            </div>\n                          )}\n\n                          {(currentQuestion.image !== null ||\n                            currentQuestion.image !== \"\" ||\n                            typeof currentQuestion.image !== \"undefined\") && (\n                            <div className=\"imageQuestion\">\n                              {showImage(currentQuestion)}\n                            </div>\n                          )}\n                        </Col>\n                      </Row>\n                    </div>\n                  )}\n                  {quiz.view === 1 && (\n                    <div className=\"result\">\n                      The right answer is: {rightAnswer}\n                    </div>\n                  )}\n                  {quiz.view === 2 && (\n                    <div>\n                      <p className=\"top\">TOP 5</p>\n                      <Score list={topList} />\n                    </div>\n                  )}\n                  {quiz.view === 3 && (\n                    <div>\n                      <p className=\"top\">END RESULT</p>\n                      <Score list={topList} />\n                    </div>\n                  )}\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n\n          <Row>\n            <Col>\n              <Card style={{ height: \"100%\", width: \"100%\" }}>\n                {showQuizControl()}\n              </Card>\n            </Col>\n\n            <Col>\n              {\" \"}\n              <Card style={{ height: \"100%\", width: \"100%\" }}>\n                <Card.Body>\n                  <Card.Title>Timer</Card.Title>\n                  <Card.Text className=\"indicator\">{seconds}s</Card.Text>\n                  {quiz.started && (\n                    <div>\n                      <Card.Title>Question</Card.Title>\n                      <Card.Text className=\"indicator\">\n                        {questionIndex} / {totalQuestions}{\" \"}\n                      </Card.Text>\n                    </div>\n                  )}\n                </Card.Body>\n              </Card>\n            </Col>\n\n            <Col>\n              <Card style={{ height: \"100%\", width: \"100%\" }}>\n                <Card.Body>\n                  <Card.Title>Total participants</Card.Title>\n                  <Card.Text className=\"indicator\">\n                    {subscribers.length}\n                  </Card.Text>\n                  {quiz.started && (\n                    <div>\n                      <Card.Title>Total responses</Card.Title>\n                      <Card.Text className=\"indicator\">{responses}</Card.Text>\n                    </div>\n                  )}\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <Modal show={stopModal}>\n            <Modal.Header>\n              <Modal.Title>Stop kwizz</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure you want to stop the kwizz?</Modal.Body>\n            <Modal.Body>\n              Please delete the kwizz when finished and not want to run it\n              again! Your data will be deleted so we can keep this kwizz free\n              for everyone.\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"danger\" onClick={() => onStop(true)}>\n                Yes\n              </Button>\n              <Button variant=\"success\" onClick={() => onStop(false)}>\n                No\n              </Button>\n            </Modal.Footer>\n          </Modal>\n          <Modal show={resetModal}>\n            <Modal.Header>\n              <Modal.Title>\n                Are you sure you want to reset the quiz?\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              All <b>subscribers</b> and <b>responses</b> of this game will be\n              deleted. After that you can use this game again. Subscribers need\n              to log in again.\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"danger\" onClick={() => resetQuiz()}>\n                Yes\n              </Button>\n              <Button variant=\"success\" onClick={() => handleResetModalClose()}>\n                No\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </Layout>\n    </AmplifyAuthenticator>\n  );\n}\n\nexport default AdminPage;\n","import React from \"react\";\nimport Layout from \"../layoutAdmin\";\nimport { Breadcrumb, Card, Accordion } from \"react-bootstrap\";\n\nfunction FAQ() {\n  return (\n    <div>\n      <Layout>\n        <div className=\"App\">\n          <Breadcrumb>\n            <Breadcrumb.Item href=\"/admin\">Admin Home</Breadcrumb.Item>\n            <Breadcrumb.Item active>FAQ</Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n        <Accordion defaultActiveKey=\"0\" className=\"accordion\">\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"header\">\n              How does kwizz.guru handle my data?\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n                You are in full control of your data. As soon as you remove a\n                kwizz all the related data will be removed except the questions\n                that you have added to the public library. We use google\n                analytics with anonymous IP adresses. Our purpose is only to see\n                how many users are using the site, we don't use this for other\n                purposes.\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\" className=\"header\">\n              I have build my Kwizz, what now?\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"1\">\n              <Card.Body>\n                You can send the game code to your colleagues, friends and\n                family and ask them to log in with their name and game code.\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"2\" className=\"header\">\n              Can I test my kwizz first?\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"2\">\n              <Card.Body>\n                Yes, open another browser on another device and log in with the\n                game code. Run you quiz in the admin control and see the results\n                in the other browser. Please make sure you reset your kwizz\n                before your kwizzers log in.\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"3\" className=\"header\">\n              Can I use a Kwizz multiple times?\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"3\">\n              <Card.Body>\n                Yes, but make sure you reset after each run.\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"4\" className=\"header\">\n              Are there any costs?\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"4\">\n              <Card.Body>\n                No. We are running this service for free as long as we can\n                effort it ;) You can always contribute:{\" \"}\n                <a\n                  href=\"https://github.com/alowa-apps/kwizz\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  https://github.com/alowa-apps/kwizz\n                </a>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"5\" className=\"header\">\n              I have an idea?\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"5\">\n              <Card.Body>\n                Please mention your idea{\" \"}\n                <a\n                  href=\"https://github.com/alowa-apps/kwizz/issues/new?assignees=&labels=&template=feature_request.md&title=\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  here.\n                </a>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"6\" className=\"header\">\n              How can we run a kwizz in the best way?\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"6\">\n              <Card.Body>\n                You can run and control the Kwizz in Chrome or Safari on any\n                device. To control the kwizz you have the best overview on a\n                larger screen. <b>Tip:</b> When the kwizz will be played on a\n                phone, stay in the browser session and not switch between\n                different apps.\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </Layout>\n    </div>\n  );\n}\n\nexport default FAQ;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Layout from \"../layoutAdmin\";\nimport { DataStore } from \"@aws-amplify/datastore\";\nimport { Questions, Quiz, QuestionsDB, Languages } from \"../../models/\";\nimport { Card, Row, Col, Form, Button, Alert, Modal } from \"react-bootstrap\";\nimport Resizer from \"react-image-file-resizer\";\nimport Video from \"../video\";\nimport { AmplifyAuthenticator, AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport Amplify from \"@aws-amplify/core\";\nimport Storage from \"@aws-amplify/storage\";\nimport { S3Image } from \"aws-amplify-react\";\nimport Select from \"react-select\";\nimport awsconfig from \"../../aws-exports\";\nimport Predictions, {\n  AmazonAIPredictionsProvider,\n} from \"@aws-amplify/predictions\";\n\nAmplify.configure(awsconfig);\n\nAmplify.register(Predictions);\n\nPredictions.addPluggable(new AmazonAIPredictionsProvider());\n\nfunction AdminEditQuestionPage() {\n  let history = useHistory();\n  const {\n    location: {\n      state: { status },\n    },\n  } = useHistory();\n\n  const {\n    location: {\n      state: { questionId },\n    },\n  } = useHistory();\n\n  localStorage.setItem(\"editQuestionStatus\", status);\n  localStorage.setItem(\"questionId\", questionId);\n\n  const [image, setImage] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [question, setQuestion] = useState({\n    image: \"\",\n    youtube: \"\",\n    question: \"\",\n    answerOne: \"\",\n    answerOneCorrect: \"\",\n    answerTwo: \"\",\n    answerTwoCorrect: \"\",\n    answerThree: \"\",\n    answerThreeCorrect: \"\",\n    answerFour: \"\",\n    answerFourCorrect: \"\",\n    category: null,\n    public: null,\n    order: 0,\n    quizID: \"\",\n  });\n  const [error, setError] = useState([]);\n\n  const [modalState, setModalState] = useState(false);\n\n  async function listQuestion() {\n    const resultQuestion = await DataStore.query(Questions, (c) =>\n      c.id(\"eq\", localStorage.getItem(\"questionId\"))\n    );\n    setQuestion(resultQuestion[0]);\n    setImage(resultQuestion[0].image);\n  }\n\n  function validate() {\n    let errors = [];\n\n    if (question.question === \"\" || typeof question.question === \"undefined\") {\n      errors.push(<li>Question is empty</li>);\n    }\n    if (\n      question.answerOne === \"\" ||\n      typeof question.answerOne === \"undefined\"\n    ) {\n      errors.push(<li>Answer 1 is empty</li>);\n    }\n    if (\n      question.answerTwo === \"\" ||\n      typeof question.answerTwo === \"undefined\"\n    ) {\n      errors.push(<li>Answer 2 is empty</li>);\n    }\n    if (\n      question.answerThree === \"\" ||\n      typeof question.answerThree === \"undefined\"\n    ) {\n      errors.push(<li>Answer 3 is empty</li>);\n    }\n    if (\n      question.answerFour === \"\" ||\n      typeof question.answerFour === \"undefined\"\n    ) {\n      errors.push(<li>Answer 4 is empty</li>);\n    }\n\n    if (\n      question.answerOneCorrect === \"\" ||\n      typeof question.answerOneCorrect === \"undefined\" ||\n      question.answerTwoCorrect === \"\" ||\n      typeof question.answerTwoCorrect === \"undefined\" ||\n      question.answerThreeCorrect === \"\" ||\n      typeof question.answerThreeCorrect === \"undefined\" ||\n      question.answerFourCorrect === \"\" ||\n      typeof question.answerFourCorrect === \"undefined\"\n    ) {\n      errors.push(<li>Select one answer which is the correct one</li>);\n    }\n\n    if (\n      typeof image === \"string\" &&\n      image.length > 0 &&\n      typeof question.youtube === \"string\" &&\n      question.youtube.length > 0\n    ) {\n      errors.push(<li>You can't use an image and youtube in the same time</li>);\n    } else {\n      if (\n        question.youtube !== \"\" &&\n        typeof question.youtube !== \"undefined\" &&\n        question.youtube !== null &&\n        !/^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com))(\\/(embed\\/)(.+)?)$/.test(\n          question.youtube\n        )\n      ) {\n        errors.push(\n          <li>\n            Use a valid YouTube video url, like\n            https://www.youtube.com/embed/VIDEO-CODE\n          </li>\n        );\n      }\n    }\n\n    if (errors.length > 0) {\n      errors.splice(0, 0, \"There are some errors:\");\n    } else {\n      errors = [];\n    }\n\n    setError(errors);\n\n    if (errors.length > 0) {\n      return true;\n    }\n    return false;\n  }\n\n  async function handleCreate() {\n    if (!validate()) {\n      const quiz = await DataStore.query(\n        Quiz,\n        localStorage.getItem(\"adminGameCode-editquiz\")\n      );\n      let questionImage = \"\";\n      let youtube = null;\n      let category = null;\n      let publicValue = null;\n\n      if (typeof image === \"string\" && image.length > 0) {\n        questionImage = image;\n      }\n      if (typeof question.youtube === \"string\" && question.youtube.length > 0) {\n        youtube = question.youtube;\n      }\n\n      if (typeof question.category !== \"undefined\") {\n        category = question.category;\n      }\n\n      if (typeof question.public === \"undefined\") {\n        publicValue = false;\n      } else {\n        publicValue = question.public;\n      }\n\n      let language = \"unknown\";\n      const data = await getLanguage(question.question);\n      // const data = \"nl\";\n\n      if (typeof data !== \"undefined\") {\n        language = data;\n      }\n\n      const lang = await DataStore.query(Languages, (c) =>\n        c.code(\"eq\", language)\n      );\n\n      if (lang.length === 0) {\n        await DataStore.save(\n          new Languages({\n            type: \"lang\",\n            code: language,\n          })\n        );\n      }\n\n      const questionSaved = await DataStore.save(\n        new Questions({\n          image: questionImage,\n          imageFromS3: true,\n          youtube: youtube,\n          public: publicValue,\n          category: category,\n          question: question.question,\n          answerOne: question.answerOne,\n          answerOneCorrect: question.answerOneCorrect,\n          answerTwo: question.answerTwo,\n          answerTwoCorrect: question.answerTwoCorrect,\n          answerThree: question.answerThree,\n          answerThreeCorrect: question.answerThreeCorrect,\n          answerFour: question.answerFour,\n          answerFourCorrect: question.answerFourCorrect,\n          quizID: localStorage.getItem(\"adminGameCode-editquiz\"),\n        })\n      );\n\n      if (publicValue) {\n        await uploadImage(\"publicLibrary/\" + file.name, file)\n          .then(async (result) => {\n            await DataStore.save(\n              new QuestionsDB({\n                image: result.key,\n                imageFromS3: true,\n                youtube: youtube,\n                public: publicValue,\n                category: category,\n                question: question.question,\n                answerOne: question.answerOne,\n                answerOneCorrect: question.answerOneCorrect,\n                answerTwo: question.answerTwo,\n                answerTwoCorrect: question.answerTwoCorrect,\n                answerThree: question.answerThree,\n                answerThreeCorrect: question.answerThreeCorrect,\n                answerFour: question.answerFour,\n                answerFourCorrect: question.answerFourCorrect,\n                relatedQuestion: questionSaved.id,\n                language: language,\n              })\n            );\n          })\n          .catch((err) => console.log(err));\n      }\n\n      const savedQuestionId = questionSaved.id;\n      let order = [];\n      order = JSON.parse(quiz.questionOrder);\n      order.push(String(savedQuestionId));\n      await DataStore.save(\n        Quiz.copyOf(quiz, (updated) => {\n          updated.questionOrder = JSON.stringify(order);\n        })\n      );\n\n      history.push({\n        pathname: \"/edit-quiz\",\n        state: {\n          quizID: localStorage.getItem(\"adminGameCode-editquiz\"),\n        },\n      });\n    }\n  }\n\n  async function uploadImage(path, file) {\n    var fileInput = false;\n    if (file) {\n      fileInput = true;\n    }\n    if (fileInput) {\n      return new Promise(async function (res, rej) {\n        await Resizer.imageFileResizer(\n          file,\n          800,\n          800,\n          \"JPEG\",\n          90,\n          0,\n          async (uri) => {\n            Storage.put(path, uri, {\n              contentType: file.type,\n            })\n              .then((result) => {\n                //return result;\n                res(result);\n              })\n              .catch((err) => console.log(err));\n          },\n          \"blob\"\n        );\n      });\n    }\n  }\n\n  async function getLanguage(text) {\n    const data = await Predictions.interpret({\n      text: {\n        source: {\n          text: text,\n        },\n        type: \"LANGUAGE\",\n      },\n    })\n      .then((result) => {\n        return result.textInterpretation.language;\n      })\n      .catch((err) => console.log(err));\n\n    return data;\n  }\n\n  async function handleEdit() {\n    if (!validate()) {\n      await DataStore.query(\n        Quiz,\n        localStorage.getItem(\"adminGameCode-editquiz\")\n      );\n\n      let questionImage = \"\";\n      let youtube = null;\n      let category = null;\n\n      if (image !== \"\") {\n        questionImage = image;\n      }\n\n      if (question.category !== \"\") {\n        category = question.category;\n      }\n\n      if (question.youtube !== \"\") {\n        youtube = question.youtube;\n      }\n\n      const original = await DataStore.query(\n        Questions,\n        localStorage.getItem(\"questionId\")\n      );\n\n      // Update current question in Quiz\n      await DataStore.save(\n        Questions.copyOf(original, (updated) => {\n          updated.image = questionImage;\n          updated.youtube = youtube;\n          updated.question = question.question;\n          updated.answerOne = question.answerOne;\n          updated.answerTwo = question.answerTwo;\n          updated.answerThree = question.answerThree;\n          updated.answerFour = question.answerFour;\n          updated.answerOneCorrect = question.answerOneCorrect;\n          updated.answerTwoCorrect = question.answerTwoCorrect;\n          updated.answerThreeCorrect = question.answerThreeCorrect;\n          updated.answerFourCorrect = question.answerFourCorrect;\n          updated.public = question.public;\n          updated.category = category;\n        })\n      );\n\n      const questionDB = await DataStore.query(QuestionsDB, (c) =>\n        c.relatedQuestion(\"eq\", localStorage.getItem(\"questionId\"))\n      );\n\n      let key = questionImage;\n      // This question exists in DB, so update question in DB\n      if (questionDB.length > 0) {\n        if (questionDB.image !== image) {\n          await uploadImage(\"publicLibrary/\" + file.name, file)\n            .then(async (result) => {\n              key = result.key;\n            })\n            .catch((err) => console.log(err));\n        }\n        await DataStore.save(\n          QuestionsDB.copyOf(questionDB[0], (updated) => {\n            updated.image = key;\n            updated.youtube = youtube;\n            updated.question = question.question;\n            updated.answerOne = question.answerOne;\n            updated.answerTwo = question.answerTwo;\n            updated.answerThree = question.answerThree;\n            updated.answerFour = question.answerFour;\n            updated.answerOneCorrect = question.answerOneCorrect;\n            updated.answerTwoCorrect = question.answerTwoCorrect;\n            updated.answerThreeCorrect = question.answerThreeCorrect;\n            updated.answerFourCorrect = question.answerFourCorrect;\n            updated.public = question.public;\n            updated.category = category;\n          })\n        );\n      }\n\n      // Add Question to Question DB, because public has beed marked during edit phase\n      if (question.public && !question.fromLibrary && questionDB.length === 0) {\n        const language = await getLanguage(question.question);\n\n        //copyImage from private bucket is not support yet, made an issue for that.\n        // https://github.com/aws-amplify/amplify-js/issues/5998\n\n        await DataStore.save(\n          new QuestionsDB({\n            image: key,\n            imageFromS3: true,\n            youtube: youtube,\n            public: question.public,\n            category: category,\n            question: question.question,\n            answerOne: question.answerOne,\n            answerOneCorrect: question.answerOneCorrect,\n            answerTwo: question.answerTwo,\n            answerTwoCorrect: question.answerTwoCorrect,\n            answerThree: question.answerThree,\n            answerThreeCorrect: question.answerThreeCorrect,\n            answerFour: question.answerFour,\n            answerFourCorrect: question.answerFourCorrect,\n            relatedQuestion: localStorage.getItem(\"questionId\"),\n            language: language,\n          })\n        );\n      }\n\n      history.push({\n        pathname: \"/edit-quiz\",\n        state: {\n          quizID: localStorage.getItem(\"adminGameCode-editquiz\"),\n        },\n      });\n    }\n  }\n\n  async function onChangeImage(e) {\n    const uploadedFile = e.target.files[0];\n\n    setFile(uploadedFile);\n\n    const result = await uploadImage(\n      localStorage.getItem(\"adminGameCode-editquiz\") + \"/\" + uploadedFile.name,\n      uploadedFile\n    );\n    setImage(result.key);\n  }\n\n  function handleChange(e) {\n    //e.preventDefault()\n\n    switch (e.target.id) {\n      case \"public\":\n        setQuestion({\n          ...question,\n          public: !question.public,\n        });\n        break;\n      case \"question\":\n        setQuestion({ ...question, question: e.target.value });\n        break;\n      case \"answer1\":\n        setQuestion({ ...question, answerOne: e.target.value });\n        break;\n      case \"answer2\":\n        setQuestion({ ...question, answerTwo: e.target.value });\n        break;\n      case \"answer3\":\n        setQuestion({ ...question, answerThree: e.target.value });\n        break;\n      case \"answer4\":\n        setQuestion({ ...question, answerFour: e.target.value });\n        break;\n      case \"image\":\n        setQuestion({ ...question, image: e.target.value });\n        break;\n      case \"youtube\":\n        setQuestion({ ...question, youtube: e.target.value });\n        break;\n      default:\n        break;\n    }\n  }\n\n  function handleClick(e) {\n    switch (e.target.id) {\n      case \"answer1\":\n        setQuestion({\n          ...question,\n          answerOneCorrect: true,\n          answerTwoCorrect: false,\n          answerThreeCorrect: false,\n          answerFourCorrect: false,\n        });\n        break;\n      case \"answer2\":\n        setQuestion({\n          ...question,\n          answerOneCorrect: false,\n          answerTwoCorrect: true,\n          answerThreeCorrect: false,\n          answerFourCorrect: false,\n        });\n        break;\n      case \"answer3\":\n        setQuestion({\n          ...question,\n          answerOneCorrect: false,\n          answerTwoCorrect: false,\n          answerThreeCorrect: true,\n          answerFourCorrect: false,\n        });\n        break;\n      case \"answer4\":\n        setQuestion({\n          ...question,\n          answerOneCorrect: false,\n          answerTwoCorrect: false,\n          answerThreeCorrect: false,\n          answerFourCorrect: true,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  function listCategories() {\n    const categoriesList = [\n      { value: \"general\", label: \"general\" },\n      { value: \"grammar\", label: \"grammar\" },\n      { value: \"math\", label: \"math\" },\n      { value: \"movies\", label: \"movies\" },\n      { value: \"music\", label: \"music\" },\n      { value: \"pictures\", label: \"pictures\" },\n      { value: \"showbizz\", label: \"showbizz\" },\n      { value: \"sports\", label: \"sports\" },\n      { value: \"tech\", label: \"tech\" },\n      { value: \"topography\", label: \"topography\" },\n      { value: \"other\", label: \"other\" },\n    ];\n\n    return (\n      <Select\n        options={categoriesList}\n        className=\"floor\"\n        onChange={handleList}\n        defaultValue={{ value: \"general\", label: \"general\" }}\n      />\n    );\n  }\n\n  async function deleteImage(key) {\n    let original = await DataStore.query(\n      Questions,\n      localStorage.getItem(\"questionId\")\n    );\n\n    if (typeof original === \"undefined\") {\n      // question not saved yet but photo already uploaded\n      await Storage.remove(key)\n        .then(async (result) => {\n          setImage(\"\");\n        })\n        .catch((err) => console.log(err));\n    } else if (\n      typeof original.fromLibrary === \"undefined\" ||\n      !original.fromLibrary\n    ) {\n      await Storage.remove(key)\n        .then(async (result) => {\n          if (typeof original !== \"undefined\") {\n            // Update current question in Quiz\n            await DataStore.save(\n              Questions.copyOf(original, (updated) => {\n                updated.image = \"\";\n              })\n            );\n          }\n\n          setImage(\"\");\n        })\n        .catch((err) => console.log(err));\n    } else {\n      // when question is from the library don't delete the image object, but just the ref in the DB\n      original = await DataStore.query(\n        Questions,\n        localStorage.getItem(\"questionId\")\n      );\n\n      if (typeof original !== \"undefined\") {\n        // Update current question in Quiz\n        await DataStore.save(\n          Questions.copyOf(original, (updated) => {\n            updated.image = \"\";\n          })\n        );\n      }\n\n      setImage(\"\");\n    }\n  }\n\n  function handleList(e) {\n    const categoryText = e.value;\n    setQuestion({ ...question, category: categoryText });\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem(\"editQuestionStatus\") === \"edit\") {\n      listQuestion();\n    } else {\n      const initQuestion = [];\n      setQuestion(initQuestion);\n    }\n\n    listCategories();\n\n    return () => {};\n  }, []);\n\n  return (\n    <AmplifyAuthenticator>\n      <div className=\"signout\">\n        {\" \"}\n        <AmplifySignOut />\n      </div>\n      <Layout>\n        <div className=\"App\">\n          <Modal show={modalState}>\n            <Modal.Header>\n              <Modal.Title>{question.question}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              {question.youtube !== null &&\n                typeof question.youtube !== \"undefined\" &&\n                question.youtube !== \"\" && (\n                  <div className=\"videoQuestion\">\n                    <Video videoSrcURL={question.youtube} videoTitle=\"\" />\n                  </div>\n                )}\n              {image !== null && typeof image !== \"undefined\" && image !== \"\" && (\n                <div className=\"imageQuestion\">\n                  {localStorage.getItem(\"editQuestionStatus\") === \"add\" ||\n                  question.imageFromS3 ? (\n                    <S3Image\n                      imgKey={image}\n                      theme={{\n                        photoImg: { maxHeight: \"300px\" },\n                      }}\n                    />\n                  ) : (\n                    <img src={image} />\n                  )}\n                </div>\n              )}\n            </Modal.Body>\n            <Modal.Body>\n              <li>{question.answerOne}</li>\n              <li>{question.answerTwo}</li>\n              <li>{question.answerThree}</li>\n              <li>{question.answerFour}</li>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => setModalState(false)}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <Link\n            to={{\n              pathname: \"/edit-quiz\",\n              state: { quizID: localStorage.getItem(\"adminGameCode-editquiz\") },\n            }}\n          >\n            <Button className=\"backButton\" variant=\"secondary\">\n              Back\n            </Button>\n          </Link>\n\n          {error.length > 0 && <Alert variant=\"danger\">{error}</Alert>}\n          <Card>\n            <Card.Body>\n              <Card.Title>{question.question}</Card.Title>\n              <Form>\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"question\">\n                      <Form.Label>Question</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter question\"\n                        onChange={handleChange}\n                        value={question.question}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Row>\n                      <Col>\n                        <Form.Group controlId=\"category\">\n                          <Form.Label>Category</Form.Label>\n\n                          {listCategories()}\n                        </Form.Group>\n                      </Col>\n\n                      <Col>\n                        {!question.fromLibrary ? (\n                          <Form.Group controlId=\"public\">\n                            {question.public ? (\n                              <Form.Check\n                                type=\"checkbox\"\n                                checked\n                                label=\"Public library (question is copyable)\"\n                                onChange={handleChange}\n                              />\n                            ) : (\n                              <Form.Check\n                                type=\"checkbox\"\n                                label=\"Public library (question is copyable)\"\n                                onChange={handleChange}\n                              />\n                            )}\n                          </Form.Group>\n                        ) : (\n                          <div className=\"libraryQuestion\">\n                            \"This question is from the library\"\n                          </div>\n                        )}\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"answer1\">\n                      <Form.Label>Answer 1</Form.Label>\n                      <Row>\n                        <Col>\n                          <Form.Control\n                            type=\"text\"\n                            value={question.answerOne}\n                            placeholder=\"Enter answer 1\"\n                            onChange={handleChange}\n                          />\n                        </Col>\n\n                        <Col>\n                          {question.answerOneCorrect ? (\n                            <Form.Check\n                              type=\"radio\"\n                              checked\n                              label=\"Correct answer?\"\n                              onChange={handleClick}\n                            />\n                          ) : (\n                            <Form.Check\n                              type=\"radio\"\n                              label=\"Correct answer?\"\n                              onChange={handleClick}\n                            />\n                          )}\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </Col>\n                </Row>\n\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"answer2\">\n                      <Form.Label>Answer 2</Form.Label>\n                      <Row>\n                        <Col>\n                          <Form.Control\n                            type=\"text\"\n                            value={question.answerTwo}\n                            placeholder=\"Enter answer 2\"\n                            onChange={handleChange}\n                          />\n                        </Col>\n\n                        <Col>\n                          {question.answerTwoCorrect ? (\n                            <Form.Check\n                              type=\"radio\"\n                              checked\n                              label=\"Correct answer?\"\n                              onChange={handleClick}\n                            />\n                          ) : (\n                            <Form.Check\n                              type=\"radio\"\n                              label=\"Correct answer?\"\n                              onChange={handleClick}\n                            />\n                          )}\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"answer3\">\n                      <Form.Label>Answer 3</Form.Label>\n                      <Row>\n                        <Col>\n                          <Form.Control\n                            type=\"text\"\n                            value={question.answerThree}\n                            placeholder=\"Enter answer 3\"\n                            onChange={handleChange}\n                          />\n                        </Col>\n\n                        <Col>\n                          {question.answerThreeCorrect ? (\n                            <Form.Check\n                              type=\"radio\"\n                              checked\n                              label=\"Correct answer?\"\n                              onChange={handleClick}\n                            />\n                          ) : (\n                            <Form.Check\n                              type=\"radio\"\n                              label=\"Correct answer?\"\n                              onChange={handleClick}\n                            />\n                          )}\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"answer4\">\n                      <Form.Label>Answer 4</Form.Label>\n                      <Row>\n                        <Col>\n                          <Form.Control\n                            type=\"text\"\n                            value={question.answerFour}\n                            placeholder=\"Enter answer 4\"\n                            onChange={handleChange}\n                          />\n                        </Col>\n\n                        <Col>\n                          {question.answerFourCorrect ? (\n                            <Form.Check\n                              type=\"radio\"\n                              checked\n                              label=\"Correct answer?\"\n                              onChange={handleClick}\n                            />\n                          ) : (\n                            <Form.Check\n                              type=\"radio\"\n                              label=\"Correct answer?\"\n                              onChange={handleClick}\n                            />\n                          )}\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"image\">\n                      <Form.Label>Image</Form.Label>\n\n                      <Row>\n                        {image !== null &&\n                        typeof image !== \"undefined\" &&\n                        image !== \"\" ? (\n                          <Col>\n                            <div>\n                              {localStorage.getItem(\"editQuestionStatus\") ===\n                                \"add\" || question.imageFromS3 ? (\n                                <div>\n                                  <S3Image\n                                    imgKey={image}\n                                    theme={{\n                                      photoImg: { maxHeight: \"300px\" },\n                                    }}\n                                  />\n                                  <Button\n                                    className=\"deleteImage\"\n                                    variant=\"danger\"\n                                    onClick={() => deleteImage(image)}\n                                  >\n                                    Delete Image\n                                  </Button>\n                                </div>\n                              ) : (\n                                <img src={image} alt=\"ramon\" />\n                              )}\n                            </div>\n                          </Col>\n                        ) : (\n                          <Col>\n                            <input\n                              type=\"file\"\n                              accept=\"image/*\"\n                              onChange={onChangeImage}\n                            />\n                          </Col>\n                        )}\n                      </Row>\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Form.Group controlId=\"youtube\">\n                      <Form.Label>Youtube URL</Form.Label>\n                      <Row>\n                        <Col>\n                          <Form.Control\n                            type=\"text\"\n                            value={question.youtube}\n                            placeholder=\"https://www.youtube.com/embed/....VIDEO-ID.....\"\n                            onChange={handleChange}\n                          />\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <span>\n                  <Button\n                    onClick={() => {\n                      setModalState(true);\n                    }}\n                    className=\"preview\"\n                    variant=\"primary\"\n                  >\n                    Preview\n                  </Button>\n                </span>\n                <span>\n                  <Button\n                    onClick={() => {\n                      if (\n                        localStorage.getItem(\"editQuestionStatus\") === \"edit\"\n                      ) {\n                        handleEdit();\n                      } else {\n                        handleCreate();\n                      }\n                    }}\n                    variant=\"primary\"\n                  >\n                    Save question\n                  </Button>\n                </span>\n              </Form>\n            </Card.Body>\n          </Card>\n        </div>\n      </Layout>\n    </AmplifyAuthenticator>\n  );\n}\n\nexport default AdminEditQuestionPage;\n","import React from \"react\";\nimport { DataStore } from \"@aws-amplify/datastore\";\nimport { QuestionsDB, Questions, Quiz } from \"../../models/\";\nimport { API, graphqlOperation } from \"@aws-amplify/api\";\nimport * as queries from \"../../graphql/queries\";\nimport { Form, Button, Modal, Image } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"../layoutAdmin\";\nimport Video from \"../video\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { AmplifyAuthenticator, AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport { S3Image } from \"aws-amplify-react\";\nimport Select from \"react-select\";\n\nclass Library extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      modalData: {\n        question: \"\"\n      },\n      modalState: false,\n      modalStateAdded: false,\n      category: \"category\",\n      language: [],\n      lang: \"language\",\n      columns: [\n        {\n          dataField: \"id\",\n          text: \"id\",\n          hidden: true\n        },\n        {\n          dataField: \"answerOne\",\n          text: \"q1\",\n          hidden: true\n        },\n        {\n          dataField: \"answerTwo\",\n          text: \"q2\",\n          hidden: true\n        },\n        {\n          dataField: \"answerThree\",\n          text: \"q3\",\n          hidden: true\n        },\n        {\n          dataField: \"answerThree\",\n          text: \"q4\",\n          hidden: true\n        },\n        {\n          dataField: \"image\",\n          text: \"image\",\n          hidden: true\n        },\n        {\n          dataField: \"youtube\",\n          text: \"youtube\",\n          hidden: true\n        },\n        {\n          dataField: \"answerFour\",\n          text: \"q4\",\n          hidden: true\n        },\n\n        {\n          dataField: \"question\",\n          text: \"Question\"\n        },\n        {\n          dataField: \"category\",\n          text: \"Category\"\n        },\n        {\n          dataField: \"language\",\n          text: \"Language\"\n        },\n        {\n          dataField: \"Preview\",\n          text: \"\",\n          formatter: (rowContent, row) => {\n            return (\n              <Button onClick={this.preview.bind(rowContent, row)}>\n                Preview\n              </Button>\n            );\n          }\n        },\n        {\n          dataField: \"link\",\n          text: \"\",\n          formatter: (rowContent, row) => {\n            return (\n              <Button onClick={this.addToQuiz.bind(rowContent, row)}>\n                Add\n              </Button>\n            );\n          }\n        }\n      ]\n    };\n    this.handleList = this.handleList.bind(this);\n    this.handleLanguage = this.handleLanguage.bind(this);\n    this.listQuestions = this.listQuestions.bind(this);\n    this.preview = this.preview.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.addToQuiz = this.addToQuiz.bind(this);\n  }\n\n  preview(rowContent, row) {\n    this.setState({\n      modalData: rowContent,\n      modalState: true\n    });\n  }\n\n  onClose() {\n    this.setState({ modalStateAdded: false });\n  }\n\n  async addToQuiz(rowContent, row) {\n    const question = await DataStore.query(QuestionsDB, rowContent.id);\n    const quiz = await DataStore.query(\n      Quiz,\n      localStorage.getItem(\"adminGameCode-editquiz\")\n    );\n\n    const newQuestion = {\n      ...question,\n      quizID: localStorage.getItem(\"adminGameCode-editquiz\"),\n      fromLibrary: true\n    };\n\n    const questionSaved = await DataStore.save(new Questions(newQuestion));\n\n    const savedQuestionId = questionSaved.id;\n\n    let order = [];\n    order = JSON.parse(quiz.questionOrder);\n    order.push(String(savedQuestionId));\n\n    await DataStore.save(\n      Quiz.copyOf(quiz, updated => {\n        updated.questionOrder = JSON.stringify(order);\n      })\n    );\n\n    this.setState({ modalStateAdded: true });\n  }\n\n  async getLanguages() {\n    await API.graphql(\n      graphqlOperation(queries.getLangByCode, {\n        type: \"lang\",\n        sortDirection: \"ASC\"\n      })\n    )\n      .then(data => {\n        const lang = data.data.getLangByCode.items;\n        const langArray = [];\n        lang.map(item => {\n          langArray.push(item.code);\n          return item;\n        });\n\n        langArray.splice(0, 0, \"show all\");\n\n        this.setState({ language: langArray });\n      })\n      .catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.listQuestions();\n    this.getLanguages();\n  }\n\n  async listQuestions() {\n    let questions = \"\";\n\n    let langFilter = localStorage.getItem(\"languageFilter\");\n    let catFilter = localStorage.getItem(\"categoryFilter\");\n\n    if (langFilter === null || langFilter === \"reset\") {\n      langFilter = \"reset\";\n    }\n\n    if (catFilter === null || catFilter === \"reset\") {\n      catFilter = \"reset\";\n    }\n\n    if (catFilter === \"reset\" && langFilter === \"reset\") {\n      // get all\n      questions = await DataStore.query(QuestionsDB);\n    } else if (catFilter !== \"reset\" && langFilter === \"reset\") {\n      questions = await DataStore.query(QuestionsDB, c =>\n        c.category(\"eq\", catFilter)\n      );\n    } else if (catFilter === \"reset\" && langFilter !== \"reset\") {\n      questions = await DataStore.query(QuestionsDB, c =>\n        c.language(\"eq\", langFilter)\n      );\n    } else if (catFilter !== \"reset\" && langFilter !== \"reset\") {\n      questions = await DataStore.query(QuestionsDB, c =>\n        c.category(\"eq\", catFilter).language(\"eq\", langFilter)\n      );\n    }\n\n    const questionsArray = questions.map(item => {\n      return {\n        id: item.id,\n        question: item.question,\n        category: item.category,\n        answerOne: item.answerOne,\n        answerTwo: item.answerTwo,\n        answerThree: item.answerThree,\n        answerFour: item.answerFour,\n        image: item.image,\n        youtube: item.youtube,\n        language: item.language\n      };\n    });\n\n    this.setState({ questions: questionsArray });\n  }\n\n  handleList(e) {\n    const categoryText = e.value;\n    localStorage.setItem(\"categoryFilter\", categoryText);\n    if (categoryText === \"show all\") {\n      localStorage.setItem(\"categoryFilter\", \"reset\");\n    }\n\n    this.listQuestions();\n  }\n\n  handleLanguage(e) {\n    const languageText = e.value;\n    localStorage.setItem(\"languageFilter\", languageText);\n    if (languageText === \"show all\") {\n      localStorage.setItem(\"languageFilter\", \"reset\");\n    }\n    this.listQuestions();\n  }\n\n  listLanguages() {\n    const languages = this.state.language;\n    const items = languages.map(item => {\n      return { value: item, label: item };\n    });\n\n    return (\n      <Select\n        options={items}\n        onChange={this.handleLanguage}\n        className=\"lngBtn\"\n        title=\"language\"\n        defaultValue={{ value: \"show all\", label: \"show all\" }}\n      />\n    );\n  }\n\n  listCategories() {\n    const categoriesList = [\n      { value: \"show all\", label: \"show all\" },\n      { value: \"general\", label: \"general\" },\n      { value: \"grammar\", label: \"grammar\" },\n      { value: \"math\", label: \"math\" },\n      { value: \"movies\", label: \"movies\" },\n      { value: \"music\", label: \"music\" },\n      { value: \"pictures\", label: \"pictures\" },\n      { value: \"showbizz\", label: \"showbizz\" },\n      { value: \"sports\", label: \"sports\" },\n      { value: \"tech\", label: \"tech\" },\n      { value: \"topography\", label: \"topography\" },\n      { value: \"other\", label: \"other\" }\n    ];\n\n    return (\n      <Select\n        options={categoriesList}\n        onChange={this.handleList}\n        defaultValue={{ value: \"show all\", label: \"show all\" }}\n        className=\"catBtn\"\n        title=\"category\"\n      />\n    );\n  }\n\n  render() {\n    const image = this.state.modalData.image;\n    let imageSlice = \"\";\n    if (image !== null && typeof image !== \"undefined\") {\n      imageSlice = image.slice(0, 4);\n    }\n    return (\n      <AmplifyAuthenticator>\n        <div className=\"signout\">\n          {\" \"}\n          <AmplifySignOut />\n        </div>\n        <Layout>\n          <div className=\"App\">\n            <header className=\"App-header\"></header>\n            <Modal show={this.state.modalState}>\n              <Modal.Header>\n                <Modal.Title>{this.state.modalData.question}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                {this.state.modalData.youtube !== null && (\n                  <div className=\"videoQuestion\">\n                    <Video\n                      videoSrcURL={this.state.modalData.youtube}\n                      videoTitle=\"\"\n                    />\n                  </div>\n                )}\n                {image !== null && (\n                  <div className=\"imageQuestion\">\n                    <div className=\"imageQuestion\">\n                      {//check because of Old Image in the library which were not uploaped yet with S3 but a ref to a picture on the internet\n                      imageSlice !== \"http\" ? (\n                        <S3Image\n                          imgKey={image}\n                          theme={{\n                            photoImg: { width: \"400px\" }\n                          }}\n                        />\n                      ) : (\n                        <Image src={image} fluid />\n                      )}\n                    </div>\n                  </div>\n                )}\n              </Modal.Body>\n              <Modal.Body>\n                <li>{this.state.modalData.answerOne}</li>\n                <li>{this.state.modalData.answerTwo}</li>\n                <li>{this.state.modalData.answerThree}</li>\n                <li>{this.state.modalData.answerFour}</li>\n              </Modal.Body>\n\n              <Modal.Footer>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => this.setState({ modalState: false })}\n                >\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <Modal show={this.state.modalStateAdded}>\n              <Modal.Header>\n                <Modal.Title>Success</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>We added this question to your quiz!</Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"primary\" onClick={() => this.onClose()}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <Link\n              to={{\n                pathname: \"/edit-quiz\",\n                state: {\n                  quizID: localStorage.getItem(\"adminGameCode-editquiz\")\n                }\n              }}\n            >\n              <Button className=\"backButton\" variant=\"secondary\">\n                Back\n              </Button>\n            </Link>\n            <div className=\"backButtonLibraryDiv\">\n              <Form.Group controlId=\"category\" title={this.state.category}>\n                {this.listCategories()}\n              </Form.Group>\n              <Form.Group controlId=\"category\">\n                {this.listLanguages()}\n              </Form.Group>\n            </div>\n            <BootstrapTable\n              keyField=\"id\"\n              data={this.state.questions}\n              columns={this.state.columns}\n              pagination={paginationFactory()}\n              paginationSize={2}\n            />\n          </div>\n        </Layout>\n      </AmplifyAuthenticator>\n    );\n  }\n}\n\nexport default Library;\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const syncQuizzes = /* GraphQL */ `\n  query SyncQuizzes(\n    $filter: ModelQuizFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncQuizzes(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        title\n        seconds\n        currentQuestion\n        questionOrder\n        started\n        questionTime\n        view\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getQuiz = /* GraphQL */ `\n  query GetQuiz($id: ID!) {\n    getQuiz(id: $id) {\n      id\n      title\n      seconds\n      currentQuestion\n      questionOrder\n      started\n      questionTime\n      view\n      owner\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listQuizs = /* GraphQL */ `\n  query ListQuizs(\n    $filter: ModelQuizFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listQuizs(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        title\n        seconds\n        currentQuestion\n        questionOrder\n        started\n        questionTime\n        view\n        owner\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncQuestions = /* GraphQL */ `\n  query SyncQuestions(\n    $filter: ModelQuestionsFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncQuestions(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        image\n        imageFromS3\n        youtube\n        question\n        answerOne\n        answerOneCorrect\n        answerTwo\n        answerTwoCorrect\n        answerThree\n        answerThreeCorrect\n        answerFour\n        answerFourCorrect\n        quizID\n        order\n        public\n        fromLibrary\n        category\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getQuestions = /* GraphQL */ `\n  query GetQuestions($id: ID!) {\n    getQuestions(id: $id) {\n      id\n      image\n      imageFromS3\n      youtube\n      question\n      answerOne\n      answerOneCorrect\n      answerTwo\n      answerTwoCorrect\n      answerThree\n      answerThreeCorrect\n      answerFour\n      answerFourCorrect\n      quizID\n      order\n      public\n      fromLibrary\n      category\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listQuestionss = /* GraphQL */ `\n  query ListQuestionss(\n    $filter: ModelQuestionsFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listQuestionss(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        image\n        imageFromS3\n        youtube\n        question\n        answerOne\n        answerOneCorrect\n        answerTwo\n        answerTwoCorrect\n        answerThree\n        answerThreeCorrect\n        answerFour\n        answerFourCorrect\n        quizID\n        order\n        public\n        fromLibrary\n        category\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncQuestionsDbs = /* GraphQL */ `\n  query SyncQuestionsDbs(\n    $filter: ModelQuestionsDBFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncQuestionsDBS(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        image\n        imageFromS3\n        youtube\n        question\n        answerOne\n        answerOneCorrect\n        answerTwo\n        answerTwoCorrect\n        answerThree\n        answerThreeCorrect\n        answerFour\n        answerFourCorrect\n        relatedQuestion\n        public\n        category\n        language\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getQuestionsDb = /* GraphQL */ `\n  query GetQuestionsDb($id: ID!) {\n    getQuestionsDB(id: $id) {\n      id\n      image\n      imageFromS3\n      youtube\n      question\n      answerOne\n      answerOneCorrect\n      answerTwo\n      answerTwoCorrect\n      answerThree\n      answerThreeCorrect\n      answerFour\n      answerFourCorrect\n      relatedQuestion\n      public\n      category\n      language\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listQuestionsDBs = /* GraphQL */ `\n  query ListQuestionsDBs(\n    $filter: ModelQuestionsDBFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listQuestionsDBs(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        image\n        imageFromS3\n        youtube\n        question\n        answerOne\n        answerOneCorrect\n        answerTwo\n        answerTwoCorrect\n        answerThree\n        answerThreeCorrect\n        answerFour\n        answerFourCorrect\n        relatedQuestion\n        public\n        category\n        language\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncSubscribers = /* GraphQL */ `\n  query SyncSubscribers(\n    $filter: ModelSubscribersFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncSubscribers(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        type\n        score\n        quizID\n        name\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getSubscribers = /* GraphQL */ `\n  query GetSubscribers($id: ID!) {\n    getSubscribers(id: $id) {\n      id\n      type\n      score\n      quizID\n      name\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listSubscriberss = /* GraphQL */ `\n  query ListSubscriberss(\n    $filter: ModelSubscribersFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listSubscriberss(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        type\n        score\n        quizID\n        name\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncResponses = /* GraphQL */ `\n  query SyncResponses(\n    $filter: ModelResponsesFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncResponses(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        quiz\n        subscriber\n        question\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getResponses = /* GraphQL */ `\n  query GetResponses($id: ID!) {\n    getResponses(id: $id) {\n      id\n      quiz\n      subscriber\n      question\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listResponsess = /* GraphQL */ `\n  query ListResponsess(\n    $filter: ModelResponsesFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listResponsess(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        quiz\n        subscriber\n        question\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const syncLanguages = /* GraphQL */ `\n  query SyncLanguages(\n    $filter: ModelLanguagesFilterInput\n    $limit: Int\n    $nextToken: String\n    $lastSync: AWSTimestamp\n  ) {\n    syncLanguages(\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      lastSync: $lastSync\n    ) {\n      items {\n        id\n        type\n        code\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getLanguages = /* GraphQL */ `\n  query GetLanguages($id: ID!) {\n    getLanguages(id: $id) {\n      id\n      type\n      code\n      _version\n      _deleted\n      _lastChangedAt\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listLanguagess = /* GraphQL */ `\n  query ListLanguagess(\n    $filter: ModelLanguagesFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listLanguagess(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        type\n        code\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\nexport const getLangByCode = /* GraphQL */ `\n  query GetLangByCode(\n    $type: String\n    $code: ModelStringKeyConditionInput\n    $sortDirection: ModelSortDirection\n    $filter: ModelLanguagesFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getLangByCode(\n      type: $type\n      code: $code\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        type\n        code\n        _version\n        _deleted\n        _lastChangedAt\n        createdAt\n        updatedAt\n      }\n      nextToken\n      startedAt\n    }\n  }\n`;\n","import React from \"react\";\nimport Amplify, { graphqlOperation } from \"@aws-amplify/core\";\nimport Auth from \"@aws-amplify/auth\";\nimport API from \"@aws-amplify/api\";\nimport * as queries from \"./graphql/queries\";\n//import { DataStore } from \"@aws-amplify/datastore\";\nimport { DataStore, syncExpression } from \"@aws-amplify/datastore\";\nimport { Helmet } from \"react-helmet\";\nimport { Button, Card, Alert, Form } from \"react-bootstrap\";\nimport Layout from \"./components/layout\";\nimport awsConfig from \"./aws-exports\";\nimport { Quiz, Subscribers, Responses } from \"./models/\";\nimport Authenticator from \"./components/auth\";\nimport Game from \"./components/game\";\nimport Admin from \"./components/admin/admin\";\nimport AdminEdit from \"./components/admin/admin-editquiz\";\nimport AdminRun from \"./components/admin/admin-runquiz\";\nimport AdminFAQ from \"./components/admin/admin-faq\";\nimport AdminEditQuestion from \"./components/admin/admin-editquestion\";\nimport AdminLibrary from \"./components/admin/question-library\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\nReactGA.initialize(\"UA-154890668-2\");\nReactGA.pageview(window.location.pathname + window.location.search);\nAmplify.configure(awsConfig);\n\nexport default class IndexPage extends React.Component {\n  state = {\n    name: \"\",\n    gamecode: \"\",\n    error: \"\",\n    path: \"\",\n  };\n\n  constructor() {\n    super();\n\n    // iam public user\n\n    this.changePath = this.changePath.bind(this);\n    this.signout = this.signout.bind(this);\n    this.startApp = this.startApp.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"app started\");\n    //this.init = DataStore.start();\n    const auth = async () => {\n      await Auth.currentCredentials()\n        .then((d) => console.log(\"data: \", d))\n        .catch((e) => console.log(\"error: \", e));\n    };\n\n    auth();\n\n    if (localStorage.getItem(\"path\") !== null) {\n      this.changePath(localStorage.getItem(\"path\"));\n    }\n  }\n\n  signout() {\n    DataStore.delete(Subscribers, localStorage.getItem(\"subscriber\"));\n    DataStore.delete(Responses, (c) =>\n      c.subscriber(\"eq\", localStorage.getItem(\"subscriber\"))\n    );\n\n    this.setState({\n      name: \"\",\n      gamecode: \"\",\n      error: \"\",\n      path: \"\",\n    });\n    localStorage.setItem(\"path\", \"\");\n    localStorage.setItem(\"gamecode\", \"\");\n    localStorage.setItem(\"subscriber\", \"\");\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = async () => {\n    this.setState({ error: \"\" });\n\n    let gamecode = this.state.gamecode;\n    const name = this.state.name;\n\n    if (gamecode === \"\" || name === \"\") {\n      this.setState({ error: \"Fill in a gamecode and name\" });\n    } else if (typeof gamecode !== \"string\" || typeof name !== \"string\") {\n      this.setState({ error: \"Fill in a correct values\" });\n    } else if (gamecode.length < 8) {\n      this.setState({ error: \"Fill in a 8 digits gamecode\" });\n    } else {\n      // check the 8 digit code and and the extra - to preven doubles from the Dynamodb ID\n\n      let filter = {\n        id: { beginsWith: this.state.gamecode },\n      };\n      const quiz = await API.graphql({\n        query: queries.listQuizs,\n        variables: { filter: filter },\n      });\n\n      if (quiz.data.listQuizs.items.length === 0) {\n        this.setState({ error: \"There is no game with this code\" });\n      } else {\n        localStorage.setItem(\"gamecode\", quiz.data.listQuizs.items[0].id);\n        this.changePath(\"auth\");\n      }\n    }\n  };\n\n  changePath(url) {\n    this.setState({ path: url });\n    localStorage.setItem(\"path\", url);\n  }\n\n  startApp() {\n    const error = this.state.error;\n    const path = this.state.path;\n\n    if (path === \"auth\") {\n      return (\n        <Authenticator changePath={this.changePath} name={this.state.name} />\n      );\n    }\n    if (path === \"game\") {\n      return <Game signout={this.signout} />;\n    }\n\n    return (\n      <div>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <meta\n            name=\"description\"\n            content=\"Make an online quiz - the free alternative to Kahoot\"\n          />\n          <title>\n            Become thé Kwizz Guru amongst colleagues, friends and family.\n          </title>\n        </Helmet>\n        <Layout path={this.state.path}>\n          <div className=\"buildQuiz\">\n            <Link to=\"/admin\">\n              <Button variant=\"warning\">Open Kwizz builder</Button>\n            </Link>\n          </div>\n          {error.length > 0 && <Alert variant=\"danger\">{error}</Alert>}\n          <Card>\n            <Card.Body>\n              <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>What is your name?</Form.Label>\n                  <Form.Control\n                    size=\"lg\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={this.state.firstName}\n                    onChange={this.handleInputChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"gameCode\">\n                  <Form.Label>Gamecode</Form.Label>\n                  <Form.Control\n                    size=\"lg\"\n                    type=\"text\"\n                    name=\"gamecode\"\n                    value={this.state.lastName}\n                    onChange={this.handleInputChange}\n                  />\n                </Form.Group>\n              </Form>\n\n              <Button size=\"lg\" onClick={this.handleSubmit}>\n                Start Game\n              </Button>\n            </Card.Body>\n          </Card>\n        </Layout>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            {this.startApp()}\n          </Route>\n          <Route path=\"/admin\">\n            <Admin />\n          </Route>\n          <Route path=\"/edit-quiz\">\n            <AdminEdit />\n          </Route>\n          <Route path=\"/run-quiz\">\n            <AdminRun />\n          </Route>\n          <Route path=\"/edit-question\">\n            <AdminEditQuestion />\n          </Route>\n          <Route path=\"/library\">\n            <AdminLibrary />\n          </Route>\n          <Route path=\"/admin-faq\">\n            <AdminFAQ />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}